      PROGRAM VERIFY
      IMPLICIT NONE
C|VERIFY       J.F.CHANDLER       1977 OCTOBER
C           * * *
C   NAMELIST INPUT ADDED 1978 JANUARY
C   PRINT FILE OPTIONS ADDED 1979 MARCH
C   COMPARE TWO CARD-IMAGE DATA SETS AND PRINT ALL DISPARITIES.
C   ALSO, OPTIONALLY PUNCH CHANGE CARDS WHICH WOULD CONVERT ONE
C   DATA SET TO THE OTHER.
C   COMPARISON IS DONE LINE BY LINE.  SPECIAL CRITERIA FOR
C   MATCHING MAY BE ESTABLISHED THRU USER-SUPPLIED LOGICAL FUNCTION
C   SCMP(BUFA,BUFB,IPT), WHERE BUFA AND BUFB ARE THE TWO LINES IN
C   QUESTION AND IPT GIVES THE COLUMN AFTER WHICH THEY AGREE.
C   SCMP MUST RETURN .TRUE. IFF THE LINES ARE CONSIDERED A MATCH.
C   SCMP MUST ALSO HAVE AN ALTERNATE ENTRY POINT PSCMP(DUMMY)
C   WHICH PRINTS (ON UNIT 6)  A SUMMARY OF THE CRITERION INDENTED
C   TO COLUMN 11.  SEVERAL OF THESE CRITERIA ARE BUILT INTO
C   SUBROUTINE CMP AND MAY BE SELECTED WITH THE INPUT 'LCMP' (Q.V.)
C
C   EACH PAIR OF LINES IS FIRST TESTED FOR IDENTICAL CHARACTERS IN
C   THE COLUMNS SPECIFIED BY THE CONTROL CARDS (Q.V.). IF THEY ARE
C   THE SAME IN THOSE COLUMNS, THEY ARE CONSIDERED IDENTICAL.
C   OTHERWISE, THE SPECIAL CRITERIA (IF ANY) ARE APPLIED, OPTIONAL
C   SCMP OR BUILTIN.  NOTE THAT 'SCMP' MAY DECLARE NON-IDENTICAL
C   LINES TO BE 'THE SAME', BUT CANNOT DECLARE IDENTICAL LINES TO
C   BE DIFFERENT.
C
C   CONTROL CARDS MAY BE SUPPLIED ON FORTRAN UNIT 5 (SYSIN), BUT
C   DEFAULT VALUES FOR ALL PARAMETERS WILL BE USED IF NO CONTROL
C   CARDS APPEAR (OR AFTER THEY RUN OUT).  THE INPUT CONSISTS OF A
C   SUCCESSION OF NAMELISTS (ALL NAMED CNTL).  THE FIRST NAMELIST
C   GROUP (IF ANY) MAY BE USED TO CHANGE THE DEFAULTS FOR THE RUN.
C   SUBSEQUENT NAMELIST GROUPS (IF ANY) MAY BE USED TO SPECIFY THE
C   PARAMETERS FOR EACH PAIR OF FILES.
C   NAMELIST CNTL HAS JSIZ, IRFM, CHAN, IPUN, ISQN, LCMP, JCL,
C   KFIN, ISTRT(8), IFIN(8), PG1ST(5), PG1FN(5), PG2ST(5), PG2FN(5)
C   JSIZ - SIZE OF LINES READ FROM INPUT FILES.  MAY BE LESS THAN
C          LRECL, BUT THEN THE REST OF EACH RECORD IS IGNORED.
C          IF MORE THAN LRECL, READ ERRORS WILL OCCUR.
C          DEFAULT IS 80.
C   IRFM - RECORD FORMAT INDICATOR FOR INPUT FILES.
C          0 => FB (DEFAULT), NON-ZERO => FBA.
C          IF NON-ZERO, USE LRECL=JSIZ+1 AND TREAT THE FIRST
C          CHARACTER AS CARRIAGE CONTROL ONLY.
C          1 => NO LINES SUPPRESSED
C          2 => SUPPRESS ALL-BLANK LINES
C          3 => ALSO SUPPRESS PAGE-EJECT LINES
C          4 => ALSO SUPPRESS ANY OTHER CARRIAGE CONTROL LINES
C   CHAN - CARRIAGE CONTROL CHARACTERS FOR SPECIAL TREATMENT:
C          1) PAGE EJECT CHARACTER (DEFAULT '1')
C          2) "NORMAL" CHARACTER (DEFAULT ' ')
C          3) "NO SKIP" CHARACTER (DEFAULT '+')
C   IPUN - OUTPUT CHANGE FILE (IF ANY) FOR PUNCHING CHANGE CARDS TO
C          CONVERT FILE 1 INTO FILE 2.  DEFAULT IS 7.  ANY INVALID
C          NUMBER FOR IPUN WILL SUPPRESS PUNCHING.
C   ISQN - CONTROL FOR OUTPUT CHANGE CARDS. IF ZERO (DEFAULT), AND
C          IF THE CARD SIZE IS NO MORE THAN 80, AND COMPARISON DOES
C          NOT GO PAST COLUMN 75, ASSUME THAT FILE 1 IS SEQUENCED
C          BY 10 IN COLUMNS 76-80.
C          IF NONZERO, USE PARM=SEQNUM AND SPECIFY LINE BY NUMERIC
C          ORDER.
C   LCMP - CONTROL FOR SPECIAL COMPARISON CRITERIA.
C        =-1 INSIST ON STRICT EQUALITY (DEFAULT)
C        = 0 IGNORE BLANKS AND COMPARE COMPRESSED CARDS
C        = 1 SKIP OVER FORTRAN STATEMENT LABELS
C        = 2 ACCEPT ANY POSITION FOR FORTRAN STATEMENT LABELS
C        = 3 COMPARE ONLY NON-BLANKS AND RECOGNIZE PEP KEYWORDS
C      OTHER CALL USER'S FUNCTION SCMP
C   JCL  - CONTROL SWITCH FOR PUNCH DATA SET; IF ZERO, TRUNCATE
C          THE DSNAME (IF NECESSARY) TO FIT ON THE 'EXEC CHANGE'
C          CARD.  OTHERWISE, INSIST ON PUNCHING TWO JCL CARDS IF
C          NEED BE.
C   KFIN - LAST COLUMN TO USE FOR COMPARISON IF ISTRT AND IFIN ARE
C          NOT SPECIFIED.  DEFAULT IS 72.
C   ISTRT,IFIN- ARRAYS OF STARTING AND ENDING COLUMNS FOR THE
C          COMPARISON.  THE DEFAULTS FOR THESE ARRAYS ARE ALWAYS
C          ISTRT(1)=1,IFIN(1)=KFIN, AND THE REST ZERO.
C   NOPRNT-CONTROL FOR PRINT SUPPRESSION
C        = 0 PRINT EVERYTHING
C        = 1 SKIP SUMMARY OF FLAGS
C        = 2 ALSO SKIP PRINTOUT OF DIFFERENCES
C   PG...- ARRAYS OF STARTING AND ENDING PAGE NUMBERS FOR FILES 1 AND
C          2, ANALOGOUS TO ISTRT AND IFIN.  PAGES WITHING THE GIVEN
C          RANGES WILL BE COMPARED  AS A CONTINUOUS STREAM AGAINST
C          THOSE OF THE OTHER FILE.  PAGE NUMBERING STARTS WITH ZERO.
C          DEFAULT FOR EACH FILE IS (0,32000)
C
C   FOR EXAMPLE, IF INPUT IS ISTRT=1,21,57, IFIN=10,35,75,  THEN
C   COLUMNS 1-10, 21-35, 57-75 WILL BE COMPARED BETWEEN EACH PAIR
C   OF CORRESPONDING LINES.  NOTE THAT THE FIRST ZERO OR BLANK
C   VALUE FOR THE START COLUMN TERMINATES THE LIST.
C   THESE PAIRS OF NUMBERS ARE CHECKED FOR OVERLAPS AND OVERRUNS
C   AND ARE CONSOLIDATED.  MISORDERING THEM WILL, IN GENERAL,
C   CAUSE TOO FEW COLUMNS TO BE COMPARED.
C
C   THE INPUT FILES ARE READ FROM UNITS 1 AND 2 SUCCESSIVELY.
C   THUS, THE FIRST PAIR ARE FT01F001 AND FT02F001, AND THEN
C   FT01F002 AND FT02F002, . . .
C   THE PROGRAM CONTINUES TO VERIFY PAIRS OF FILES UNTIL IT RUNS
C   OUT OF FILES.
C   NOTE: TO SPECIFY A MEMBER OF A PARTITIONED DATA SET AS AN INPUT
C   FILE THE USER MUST INCLUDE 'LABEL=(,,,IN)' ON THE DD CARD,
C   SINCE FORTRAN I/O SEEMS TO REQUIRE IT.
C
C   SAMPLE JOB SETUP:
C //VERIFY  JOB  (ACCT INFO)
C //V EXEC PGM=VERIFY
C //FT05F001 DD DDNAME=SYSIN
C //FT06F001 DD SYSOUT=A
C //FT07F001 DD SYSOUT=B
C //FT01F001 DD DSN=PEP.SOURCE(PRMRED),DISP=SHR,LABEL=(,,,IN)
C //FT02F001 DD *
C      (ALTERED DECK)
C /*
C //SYSIN DD *
C  &CNTL LCMP=2,JCL=1, &END
C /*
C
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 
      include 'aplst.inc'
 
C   ISPG - NUMBER OF PAGE RANGES BOUNDARIES FOR EACH FILE
C   KSPG - INDEX OF NEXT PAGE BOUNDARY TO LOOK FOR
C   IIPG - 1 TO ACCEPT THIS PAGE, 0 TO IGNORE IT
C   SPG  - PTRS TO PAGE REGION BOUNDARIES, 1ST IS (OFF TO ON)
 
      include 'ibfl.inc'
C        IBFL - LENGTH OF EACH BUFFER (IN BYTES)
C        IBFLL - INDEX OF LAST RECORD IN EACH BUFFER
C        ISUB1- INDEX OF FIRST CARD IN EACH BUFFER
C
      include 'lcmp.inc'
C    LCMP - SPECIAL CRITERIA SELECTOR
C    ISTRT-ARRAY OF STARTING COLUMN NUMBERS
C    IFIN- ARRAY OF ENDING COLUMN NUMBERS
C    ISF - NUMBER OF START-FINISH PAIRS
C
      include 'pgfba.inc'
C    NKPG- DIMENSION OF KPGP ARRAY
C    IRFM- RECORD FORMAT INDICATOR
C    IPNP- COUNT OF PAGES CURRENTLY ACTIVE
C    IPGN- LATEST PAGE NUMBER (STARTS AT 0)
C    CHAN- SPECIAL CONTROL CHARACTERS
C    CHDM- EXTRAS
C    ISUP- COUNT OF SUPPRESSED LINES OF INPUT
C    NDMM- EXTRAS
C    KPGP- CUMULATIVE LINE NUMBERS OF PAGE STARTS (PAGE FOLLOWS
C          LINE "KPGP")
C    NOPRNT-PRINT SUPPRESSION CONTROL
C    LOOK- SEARCH LEVEL FOR NEXT MATCH
C    LOOKS-BACKUP SEARCH LEVEL IN CASE OF OVERPRINTING
C
      include 'ptrs.inc'
C    LN  - LINE NUMBER OF LATEST CONFIRMED MATCH
C    IP  - CURRENT POINTER IN SEARCH FOR MATCH (LEFT THE SAME AFTER THE
C          MATCH IS FOUND)
C    JP  - HIGHEST NUMBERED CARD CURRENTLY READ IN
C    IEF - END OF FILE INDICATOR (0 BEFORE, 1 AS SOON AS EOF REACHED)
C    ISIZ- NUMBER OF CARD IMAGES ALLOWED IN BUFFER
C    IDMP- COUNTER FOR DISCREPANCIES BETWEEN FILES. INCREMENTED IN 'VDUM
C    JSIZ- SIZE OF A CARD (NOMINALLY 80, TIED TO /BUFFER/)
C    ISQN- INDICATES WHETHER TO USE PARM=SEQNUM
C    IEND5-INDICATES END OF INPUT STREAM
C    JCL - INDICATES WHETHER PUNCH OUTPUT IS TO BE JCL OR NOT
C    KFIN- LAST COLUMN FOR COMPARISONS
C
      include 'undscr.inc'
      include 'chars.inc'
      CHARACTER*1 MBR(8),DSNC(44),CMDT(8)
      CHARACTER*9 NULLF/'NULLFILE '/
      EQUIVALENCE (DSN(1,1),DSNC(1)),(MBR(1),DSN(12,1))
      INTEGER*4 IC(2)
      CHARACTER*4 SAME(2)/' (SA','ME) '/, SNPL(2)/'Y   ','IES '/,
     .   JCLF(2)/'    ',' JCL'/, CZERO, BLNK4
      INTEGER*4 IZERO/0/
      CHARACTER*12 IPRM(2) /'            ',' PRM=SEQNUM,'/
      EQUIVALENCE (IZERO,CZERO), (IPRM(1),BLNK4)
      CHARACTER*1 MBPM(27),PRM(12),PDS(4)/'P','D','S','='/
      CHARACTER*7 MBEQ/'MEMBER='/
      EQUIVALENCE (PRM(1),IPRM(2)),(MBPM(1),MBEQ)
      CHARACTER*8 QSUP(4)/'    NONE','   BLANK','PAGE TOP',' CONTROL'/
      INTEGER*4 IO(3)/1,2,0/
      INTEGER*2 ICCS(99)/99*-1/
C ASSORTED DECLARATIONS
      INTEGER*4 I,IBL,ICC,IKSP,IM,IMB,IMB1,IMP,IMQ,ISNPL,J,JJ
C
      WRITE(6,10) VERSN
   10 FORMAT('1',19X,'* * VERIFY * * VERSION',A4,' * *'/
     1 6X,'INPUT STREAM:')
      CALL VINPUT(0)
C       * * * START MAIN LOOP HERE * * *
C*  START=200
C        CHECK FOR DATA SETS
C        INITIALIZE PTRS
  200 WRITE(6,220)
  220 FORMAT('-',20X,'* * * *  VERIFY  * * * *')
      CALL VINPUT(1)
      DO 210 I=1,2
      CALL DSNAME(I,DSN(1,I),IC(I))
      DO 205 J=1,15
  205 IF(DSN(J,I).EQ.CZERO) DSN(J,I)=BLNK4
      LN(I)=0
      JP(I)=0
      ISUP(I)=0
      IEF(I)=0
      IPGN(I)=0
      KPGP(I,1)=0
      IPNP(I)=1
  210 CONTINUE
      IF(IC(1).NE.0.OR.IC(2).NE.0) GOTO 9000
      IDMP=0
      IFIN0=-1
      IO(3)=IPUN
      ISIZ=IBFL/JSIZ
      IBFLL(1)=(ISIZ-1)*JSIZ+1
      IBFLL(2)=IBFLL(1)+IBFL
C        INITIALIZE UNDERSCORING FACILITY
      IU0=0
C      IF(IRFM.EQ.0) IU0=22
      IU1=IU0+1
      IUL=MIN0(500,IU0+JSIZ)
      IULB=IUL-IU0
      DO 226 J=1,500
  226 UBUF(J)=BLANK
C        COMPRESS AND INTERLEAVE LIST OF PAGE BOUNDARIES
      IF(IRFM.LE.0) GOTO 270
      DO 260 I=1,2
      IKSP=ISPG(I)
      IF(NOPRNT.GT.0) GOTO 245
      DO 230 J=1,IKSP
  230 CMDT(J)=COMMA
      CMDT(IKSP)=DOT
      WRITE(6,240) I,(PGS(J,I),PGF(J,I),CMDT(J),J=1,IKSP)
  240 FORMAT(10X,'PAGES USED IN FILE',I2,':',5(I6,'-',I5,A1))
  245 JJ=0
      DO 250 J=1,IKSP
      SPG(1+JJ,I)=PGS(J,I)-1
      SPG(2+JJ,I)=PGF(J,I)
  250 JJ=JJ+2
C        NOTE - PAGE 0 DOESN'T BEGIN WITH A PAGE EJECT
      IIPG(I)=1
      KSPG(I)=2
      IF(IPGN(I).GT.SPG(1,I)) GOTO 260
      IIPG(I)=0
      KSPG(I)=1
  260 ISPG(I)=2*IKSP
  270 CONTINUE
C        WRITE OUT LIST AS IT WILL BE USED
      IF(NOPRNT.GT.0) GOTO 310
      DO 280 I=1,ISF
  280 CMDT(I)=COMMA
      CMDT(ISF)=DOT
      WRITE(6,300) (ISTRT(I),IFIN(I),CMDT(I),I=1,ISF)
  300 FORMAT(10X,'COMPARE COLUMNS',8(I5,'-',I4,A1))
  310 IBL=1
C*  START=400
C        SEE IF PUNCH DATA SET VALID
      IF(IPUN.LT.1.OR.IPUN.GT.99) GOTO 400
      IF(ICCS(IPUN).EQ.0) THEN
C DATA SET ALREADY VALIDATED
         DSN(1,3)=SAME(1)
         DSN(2,3)=SAME(2)
         IBL=3
         GOTO 410
      ELSE IF(ICCS(IPUN).LT.0) THEN
         GOTO 440
      ENDIF
  400 IPUN=0
C        BLANK OUT DATA SET INFO
  410 DO 420 I=IBL,15
  420 DSN(I,3)=BLNK4
      GOTO 450
C       GET INFO AND SEE IF DATA SET ASSIGNED
  440 CALL DSNAME(IPUN,DSN(1,3),ICC)
      IF(FNAME(3)(1:9).EQ.NULLF) ICC=3
      ICCS(IPUN)=ICC
      IF(ICC.NE.0) IPUN=0
  450 CONTINUE
C*  START=500
      IF(JSIZ.GT.80.OR.IFIN(ISF).GT.75) ISQN=1
      IF(IPUN.EQ.0) ISQN=0
      IF(IPUN.EQ.0) JCL=0
      IF(NOPRNT.GT.0) GOTO 518
      WRITE(6,500) JSIZ,ISIZ,IPRM(ISQN+1),JCLF(JCL+1)
  500 FORMAT(10X,'CARD SIZE USED=',I3,'  BUFFER SIZE=',I5,2X,A12,A4)
C           PRINT DETAILS OF PRINT-FILE OPTIONS, IF ANY
      IF(IRFM.EQ.0) GOTO 515
      IKSP=MIN0(IRFM,4)
      J=MIN0(IRFM,2)
      DO 505 I=1,IKSP
  505 CMDT(I)=COMMA
      CMDT(IKSP)=DOT
      WRITE(6,510) CHAN,(QSUP(I),CMDT(I),I=J,IKSP)
  510 FORMAT(10X,'PRINT FILE INPUT, CHANNELS ''',A1,'''',
     .  2(',''', A1, '''') / 10X,'LINE SUPPRESSION:',6(1X,A8,A1) )
C        WRITE SCMP HEADER
  515 CALL PCMP(I)
C        LIST INPUT FILES
  518 WRITE(6,520) (IO(I),(DSN(J,I),J=1,15),I=1,3)
  520 FORMAT('0     FILE    DATA SET NAME',32X,'MEMBER',6X,'VOLUME'/
     1 (I8,3X,11A4,3X,2A4,5X,2A4) )
C*  START=700
      IF(IPUN.EQ.0) GOTO 1000
      DO 530 I=1,8
      IF(MBR(I).EQ.BLANK) GOTO 540
  530 CONTINUE
      I=9
  540 IMB=I-1
      DO 550 I=1,44
      IF(DSNC(I).EQ.BLANK) GOTO 560
  550 CONTINUE
      I=45
  560 IMP=I-1
      IM=7
      IMB1=MAX0(IMB,1)
      IF(IMB.EQ.0) MBR(1)=PDS(1)
C           PUT MEMBER NAME INTO STRING
      DO 580 I=1,IMB1
      IM=IM+1
  580 MBPM(IM)=MBR(I)
      IM=IM+1
      MBPM(IM)=COMMA
  585 IF(ISQN.EQ.0) GOTO 600
      DO 590 I=2,12
      IM=IM+1
  590 MBPM(IM)=PRM(I)
  600 IF(IMB.LE.0) GOTO 640
      IMQ=MIN0(IMP,42-IM)
C        SEE IF ROOM FOR WHOLE THING ON 1 CARD
      IF(IMQ.LT.IMP.AND.JCL.NE.0) GOTO 620
      WRITE(IPUN,610) (MBPM(I),I=1,IM),PDS,QUOTE,(DSNC(I),I=1,IMQ),QUOTE
  610 FORMAT('//  EXEC CHANGE,',55A1)
      GOTO 1000
C          INFO WON'T FIT ON ONE CARD, WRITE 1ST CARD ANYWAY
  620 WRITE(IPUN,610) (MBPM(I),I=1,IM)
C         WRITE 2ND JCL CARD
      WRITE(IPUN,630) (DSNC(I),I=1,IMP),QUOTE
  630 FORMAT('//    PDS=''',45A1)
      GOTO 1000
C           1ST FILE IS SEQUENTIAL
  640 IM=IM-1
      WRITE(IPUN,610) (MBPM(I),I=1,IM)
      WRITE(IPUN,660) (DSNC(I),I=1,IMP)
  660 FORMAT('//IN DD DISP=SHR,DSN=',44A1)
C*  START=1000
C        DO VERIFICATION
 1000 CALL VERF
C        PRINT SUMMARY
      ISNPL=1
      IF(IDMP.NE.1) ISNPL=2
      WRITE(6,1010) (JP(I),I,I=1,2),IDMP,SNPL(ISNPL)
 1010 FORMAT('-FINISHED PROCESSING AFTER',2(/I8,' CARDS FROM FILE',I2)/
     1 I8,' DISCREPANC',A4)
      IF(IRFM.GT.0.AND.ISUP(1)+ISUP(2).GT.0) WRITE(6,1020) ISUP
 1020 FORMAT(I7,' AND',I4,' LINES SUPPRESSED')
C*  START=1200
C        RUN OUT BOTH FILES IF NOT ALREADY DONE
      DO 1220 I=1,2
      IF(IEF(I).EQ.1) GOTO 1220
 1200 READ(I,1210,END=1220)
 1210 FORMAT(I1)
      GOTO 1200
 1220 CONTINUE
      GOTO 200
C*  START=9000
C        NO MORE INPUT FILES
 9000 IF(IC(1).NE.0.AND.IC(2).NE.0) GOTO 9020
      I=1
      IF(IC(1).EQ.0) I=2
      WRITE(6,9010) I
 9010 FORMAT('-* * * FILE',I2,' MISSING * * *')
      WRITE(6,520) (I,(DSN(J,I),J=1,15),I=1,2)
 9020 WRITE(6,9030)
 9030 FORMAT('0',10X,'* * * END OF VERIFICATION * * *')
      STOP
      END
