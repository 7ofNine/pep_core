      subroutine INPUT(repeat)

      implicit none


c*** start of declarations inserted by spag
      integer   in0, iseq, LEG, noprnt, npl, nstop, nstopc

c*** end of declarations inserted by spag


c
c m.e.ash   june 1966    subroutine input
c input data and control constants are initialized and read
c setup computations are performed
c
c

      integer*2 repeat
c     repeat=0  job ends at end of run with given input data (default)
c     repeat=1  job repeats at end of run with new input data
c
c     the first card of the input data contains in columns 1 to 72 a
c title for the program run read in a-format. the 72 characters of the
c title appear at the top of every page of the printout and in the first
c record of every data set generated by the program. the calendar date,
c computed internally, also appears at the top of every printout page
c and in the first record of every data set, so it is not necessary that
c the date be included on the title card. the first eight characters of
c the title card should be the run number because these first eight
c characters alone are put in certain cells of the second record of the
c output n-body tape.
c
c     next, there are cards read in subroutine input using namelist with
c the title &nmlst1 giving the values of solar system and other
c parameters.  the values on these cards may affect the form of the
c rest of the input stream.  in particular, if jct(27) is set to 0
c (the default), the input must conform to the rigid structure
c described in the following paragraphs.  if jct(27) is set to 1, the
c input must follow the '* command' format -- each group of input
c cards must be preceded by a '*' card.  see below for details.
c
c     next, there is a sequence of sets of cards, each set read in
c subroutine bodred using namelist with the title &nmlst2 and each set
c giving the constants associated with the earth-moon barycenter
c (nplnt=3), the moon (nplnt=10), the earth rotation (nplnt=-3),the moon
c rotation (nplnt=-10), planets (nplnt=1,2,4,5,6,7,8,9 with ncentr=0),
c asteroids (nplnt=11,...,30 with ncentr=0), natural satellites (nplnt=
c 11,...,30 with ncentr.gt.0), artificial space probes (nplnt.gt.30),
c or planet rotation (nplnt=-1,-2,-4,...,-9,-11,...). the nplnt must
c be distinct for each &nmlst2 if ict(1).ge.0. if ict(1)=-1, there can
c be several &nmlst2 for each nplnt not equal to 3,10,-3,-10 to run
c several integration test cases. also in certain test cases ncentr can
c be -1 for nplnt=1,2,4,...,9,11,...,30. the &nmlst2 for planets which
c are target or central bodies for satellite or probe integrations must
c come before the &nmlst2 for the given satellite or probe. (note.
c change in pep allows them to come after.)
c the end of the sequence of &nmlst2 sets of cards is signaled by an
c &nmlst2 set with nplnt=0.
c
c     note.... a fortran namelist restriction is that the '&' in front
c of the namelist name start in column 2, that only columns 2-80 be
c used in namelist, that a comma appear directly after each parameter
c value, plus any other grammar mentioned in the fortran iv manual.
c the last item in a namelist is &end.  it is recommended that columns
c 73-80 be left blank; peptic may someday be changed to ignore these
c columns.
c
c     next, there are zero or more cards read in subroutine sitred
c giving the coordinates of observing sites, with a maximum of 100
c sites. there is one card per site, with an additional card giving the
c radius and degree of flattening of the earth if geodetic coordinates
c are input for which the radius and degree of flattening differ from
c those input to pep as a whole. the end of the sequence of observing
c site cards is signaled by a blank card.
c
c     next, there are zero or more cards read in subroutine sptred
c giving the coordinates of spots on observed bodies and coordinates of
c stars (body number negative), one card per spot or star with a
c maximum of u_mxspt spots and stars. the end of the sequence of spot
c and star cards is signaled by a blank card.
c
c     next, there are zero or more cards read in subroutine rbsred
c giving constant biases for planetary radar observation series, one
c card per series with a maximum of u_mxrbs series. the end of the
c sequence of radar observation bias cards is signaled by a blank card.
c
c     next, there are zero or more cards read in subroutine eqnred
c giving equinox-equator-latitude corrections for optical observation
c series, one card per series with a maximum of 100 series. we are
c thinking of adding additional optical observation series bias
c corrections for refraction and position of observing site, which would
c necessitate an additional card for each observation series. but for
c the moment there is one card per series. the end of the sequence of
c equinox-equator-latitude correction cards is signaled by a blank card.
c
c
c     next, there are zero or more cards read in subroutine phsred
c giving planetary phase corrections for optical observation series, one
c or two cards per series for each planet with a maximum of u_mxphs such
c sets. the end of the sequence of phase correction cards is signaled
c by a blank card.
c
c
c     next,    there are zero or more sets of cards read in subroutine
c dltred controlling observation series changes, error weighting and
c dummy observations. each set consists of a card describing the
c observation series with exactly the same format as the card at the
c start of the observation series on the observation card data set iobs
c plus cards describing alterations in the
c error weighting of individual observations or the generation of
c specific dummy observations. the end of these additional cards is
c signaled by a blank card and the end of the sequence of sets of cards
c is signaled by a *end starting in column 1 (or by an end-of-file if
c ict(42)=0, ict(44)=0, repeat=0 and no observations in input stream).
c
c     next, in subroutine filtin only if ict(42).ne.0.
c if ict(42).eq.1,  &nmlst3  is read for controls for kalman filter
c processing.  this is followed by the names of the process noise
c parameters ending with a blank card.
c
c     in subroutine acmin only if ict(44) .ne.0
c if ict(44).eq.1,  a title card  (80 cols.) followed by one or more
c a priori input groups composed of an &nmlst4 followed by a priori
c parameter name cards ending with a blank card.
c &nmlst4 with n=0 ends the a priori input groups.
c if ict(44).gt.1, these are read from data set no. = ict(44).
c
c     multin reads partial preduction requests (followed by one blank
c card) (if jct(53).gt.0), and then multiple parameter set requests
c (followed by one blank card) (if jct(51).gt.0). the blank card(s)
c are included only if the associated jct(s) is (are).gt.0.
c
c     every parameter is given a standard value before the input cards
c are read, so it is only necessary to read those parameters which
c differ from their standard values. see the subroutines in which the
c parameters are read to see the setup standard values and to see
c definitions of the parameters.
c
c after all the input control and data parameters in pep can come
c observation cards if ict(1).ge.0 and iobs=5.
c
c an input stream for another pep run can follow if repeat.ge.1 in the
c &nmlst1 for this above pep run.
c
c
c-----------summary of pep input deck setup------------
c
c
c   i heading  a title for the output  (1 card)
c
c  ii &nmlst1
c              values of the control parameters used for program operati
c              and general solar system parameters.
c              explanation in subroutine prmred
c     &end
c
c iii &nmlst2
c              nplnt=nonzero, plus values of data and control
c              constants for body nplnt
c              explanation in subroutine bodred
c     &end
c                  ....
c                  ....
c                  ....
c     sequence of such &nmlst2 namelists with nplnt=nonzero
c                  ....
c                  ....
c                  ....
c     &nmlst2
c     nplnt=0,
c     &end
c
c  iv observing site information
c               explanation in subroutine sitred
c     one blank card
c
c   v coordinates of spots on observed bodies
c               explanation in subroutine sptred
c     one blank card
c
c  vi constant biases for planetary radar observation series
c               explanation in subroutine rbsred
c     one blank card
c
c vii equinox-equator-latitude corrections for optical observation
c               series
c               explanation in subroutine eqnred
c     one blank card
c
cviii planetary phase corrections for optical observation series
c               explanation in subroutine phsred
c     one blank card
c
c  ix observation library series information
c               explanation in subroutine dltred
c     *end (or end of file if ict(42)=0, ict(44)=0, repeat=0 and no
c     observations in input stream)
c
c   x  &nmlst3  if ict(42).eq.1
c              controls for kalman filter processing
c              explanation in subroutine filtin
c      &end
c      followed by the names of the process noise parameters
c              explanation in subroutine filtin
c      one blank card
c
c  xi sky corrections - star catalog error maps (allowed only with
c               * commands).  explanation in subroutine skyin.
c
c xii  heading  a priori title card (1 card 80 columns)
c              explanation in subroutine acmin
c      &nmlst4  if ict(44).eq.1
c              a priori values and covariances
c              explanation in subroutine acmin
c      &end
c              followed by the names of the a priori parameters
c              explanation in subroutine acmin and subroutine namprm
c      one blank card
c                  ....
c                  ....
c              sequence of such &nmlst4 namelists with n= non zero
c              followed by names of the a priori parameters  and
c              followed by one blank card
c                  ....
c                  ....
c      &nmlst4
c      n=0,
c      &end
c one blank card
c
cxiii control cards for partial pre-reduction, parameter constraints,
c               and/or multiple-parameter-set runs (up to 2000 cards).
c               explanation in subroutine prmtrn.
c     one blank card
c
c
cnote.  there can be zero &nmlst2 namelists with nplnt=nonzero.
cnote.  sections iv-ix may each have zero cards but each section must
c       end in one blank card.
cnote.  &nmlst1 and &nmlst2 namelists can have comments preceeded by
c       a dollar sign ($). pep does its own spooling and before a card
c       is given to the system namelist routines a search is made for a
c       $ sign and if one is found it and all the characters from that
c       point out to column 80 are blanked.
cnote.  the input stream up to this point is printed out exactly as
c       read in (possible for namelists because pep does its own
c       spooling).
c
c xiv observations on sysin (iobs=5 cards) if used
c
c     another pep input stream follows if repeat.ge.1 in &nmlst1 of the
c     above input stream
c
c     if jct(27).gt.0 then * command format of input required
c        restrictions on order in * command format
c             a. title card
c             b. &nmlst1
c             c. any *object packets
c             d. any other * commands
c             e. *apriori should come after most other input types
c                     (because it produces summary of adj. params)
c             f. *multpar must follow *apriori
c             g. **end to end stream (or just end-of-file)
c             h. all namelist control cards should be omitted except
c                &nmlst1 and the &nmlst4/&end cards for a priori input.
c                also, the blank card separators should be omitted
c                except in the midst of a priori input.
c
c - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
c

      include 'crdbuf.inc'

      include 'fcntrl.inc'
      include 'inodta.inc'

c
c lcom is a list of commands. the first 8 columns of the * card
c must match lcom(i). room is provided for up to 20 commands.
      character*8 lcom(20)/'*OBJECT', '*SITES', '*SPOTS', '*BIASES',
     .          '*EECORR', '*PHASES', '*DLTREAD', '*FILTER', '*APRIORI',
     .          '*MULTPAR', '*END', '**END', '*MARKOV', '*STATE',
     .          '*SKYCORR', 5*'*'/
c
c table of synonyms.  nsyn is number of synonyms, command
c which matches lsyn(i) is translated to lcom(nlcom(i))
      integer*4 nsyn/2/
      integer*4 nlcom(2)/5,7/
      character*8 lsyn(2)/'*CLOCKS','*DLTRED'/
c
c     this is the list of plnt names allowed on the *object card. the
c     corresponding planet number is in the array bn. 22 planets are
c     currently allowed by name. any plnt nmbr can be specified by using
c     *object ######## where # is the planet #.
c
      character*8 body(22)/'MERCURY', 'VENUS', 'EMBARY', 'MARS',
     .          'JUPITER', 'SATURN', 'URANUS', 'NEPTUNE', 'PLUTO',
     .          'MERCURY-', 'VENUS-RO', 'EARTH-RO', 'MARS-ROT',
     .          'JUPITER-', 'SATURN-R', 'URANUS-R', 'NEPTUNE-',
     .          'PLUTO-RO', 'MOON', 'MOON-ROT', 'EARTH', 'END'/
      integer*2 bn(22)
      data bn/1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -2, -3, -4, -5, -6, -7, -8,
     .     -9, 10, -10, 3, 0/
      character*6 nml2/'NMLST2'/,nml3/'NMLST3'/,nml5/'NMLST5'/

      logical   bodend
      logical*1 called(20)
      character*8 blank/'        '/

      include 'nmlchrdt.inc'

      integer   i,j,jdpad


c
c*  start=1000
      Useit  = .false.
      bodend = .false.
      do i = 1, 20
         called(i) = .false.
      end do
      Lcnt = 0
c input error count which causes a stop at the end of the
c input link for nstop.gt.0
      nstop  = 0
      nstopc = 0
c
c read title card and &nmlst1 namelist
      call PRMRED(in0,repeat,noprnt,iseq,nstop,jdpad)

      if(Jct(27).le.0) then
         do while( .true. )
            call PEPTIN(In,Iout,nstop)
            if(Ieof.ne.1) then
               if(Card8(1).eq.blank) then
                  if(LEG(64,9,Card8,1,Card8).eq.0) goto 50
               endif
               Useit = .true.
               if(Card8(1).eq.lcom(1)) then
                  Jct(27) = 2
                  write(Iout,10)
   10             format(10x,'JCT(27)=2', 20(' $'), t83,
     .                   '*** INSERTED ***')
               endif
            endif
            goto 100
   50    end do
      endif

c initialize some controls
  100 call FILTIN(0,nstop,.true.)
      call SKYIN(in0,nstop,.true.)

      if(Jct(27).eq.0) then
c
c*  start=3000
c initialize and read data for earth,moon,planet,space probe
c motion and rotation
         call BDYRED(in0,nstop,jdpad,0)
c
c initialize and read data for observing sites
c etc.,   input stream parts iv - xi
         call INITAL(called,.false.,.false.,in0,nstop)
      else

c initialize bdyred
         call BDYRED(in0,nstop,jdpad,-1)
         do while( .true. )

            call PEPTIN(In,Iout,nstop)
            if(Ieof.eq.1) goto 250
            write(Iout,120) Card80
  120       format('0', A80, '*****')
            do i = 1, nsyn
               if(Card8(1).eq.lsyn(i)) Card8(1) = lcom(nlcom(i))
            end do

            do i = 1, 20
               if(Card8(1).eq.lcom(i)) then
                  called(i) = .true.
                  if(i.gt.1) bodend = .true.
                  if(i.eq.1) then
c
c*  start=2000
c
c *object name card
                     if(bodend) call SUICID(
     .        '*OBJECT COMMAND OUT OF ORDER, STOP IN INPUT ', 11)
                     write(in0,130) Nmlchr,nml2
  130                format(1x,a1,a6)

c determine which object or planet
                     do j = 1, 22
                        if(body(j).eq.Card8(2)) then

c write out nplnt for name specified
                           write(in0,140) bn(j)
  140                      format(' NPLNT=', i3, ',')
                           goto 150
                        endif
                     end do

c name is not in list, then assume name=nplnt#
                     j = 1
                     call DECODI(Card8(2),j,8,npl)
                     write(in0,140) npl

c read data for earth,moon,planet,space probe motion or rotation
  150                call BDYRED(in0,nstop,jdpad,1)
c
c
c read data for observing sites
                  else if(i.eq.2) then
                     call SITRED(in0,nstop,.false.)

c read data for observed spots on other bodies
                  else if(i.eq.3) then
                     call SPTRED(in0,nstop,.false.)

c read data for planetary radar obs biases
                  else if(i.eq.4) then
                     call RBSRED(in0,nstop,.false.)

c read data for equator-equinox corrections for optical series
                  else if(i.eq.5) then
                     call EQNRED(in0,nstop,.false.)

c read data for planetary phase corrections for optical series
                  else if(i.eq.6) then
                     call PHSRED(in0,nstop,.false.)

c read data controlling obs series changes and error weighing and
c dummy data
                  else if(i.eq.7) then
                     call DLTRED(in0,nstop,.false.)

c read controls for kalman filter
                  else if(i.eq.8) then
                     write(in0,130) Nmlchr,nml3
                     call FILTIN(in0,nstop,.false.)

c read a priori title card, a priori input
c groups (&nmlst4 followed by a priori parameter name cards)
c acmin requires that initializations for all routines
c have been done before it is called
                  else if(i.eq.9) then
                     call INITAL(called,.true.,.true.,in0,nstop)
                     call ACMIN(in0,nstop,.false.)

c spool in multiple parameter set requests
                  else if(i.eq.10) then
                     call MULTIN(in0,nstop,.false.)

                  else if(i.eq.11 .or. i.eq.12) then
                     goto 250

c read process noise parameter names
                  else if(i.eq.13) then
                     call FILTPN(in0,nstop,.false.)

c read filter epochs & proc noise parm values
                  else if(i.eq.14) then
                     write(in0,130) Nmlchr,nml5
                     call FILTEP(in0,nstop,.false.)

c read sky corrections
                  else if(i.eq.15) then
                     call SKYIN(in0,nstop,.false.)

                  else
                     goto 160

                  endif
                  goto 200
               endif
  160       end do

c ignore blank cards (16 blanks)
            if((Card8(1).ne.blank) .or. (Card8(2).ne.blank)) then
               write(Iout,170)
  170          format('+', 86x, 'ERROR, BAD COMMAND')
               if(Mout.gt.0 .and. nstopc.eq.0) write(Mout,180)
  180          format(' BAD COMMAND(S) FOUND IN INPUT')
               nstopc = nstopc + 1
            endif
  200    end do

c
c *end obtained. make sure those routines that were not called
c are initialized, and that the default spots, sites, etc. are
c sorted
  250    call INITAL(called,.false.,.true.,in0,nstop)
      endif

c
c*  start=9000
c close any external source file and release buffer
      call PDSCLS
      Lcnt  = 0
      Useit = .false.
      write(Iout,300)
  300 format(1x,20('----'), ' END OF INPUT STREAM')
      if(nstopc.gt.0) nstop = nstop + 1
c
c
c print-out input data
      call PRNTOT(noprnt,iseq,nstop)
      return
      end
