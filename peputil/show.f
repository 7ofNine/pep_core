      SUBROUTINE SHOW(DATA)
C         OUTPUT OF RESULTS OF FOURIER TRANSFORM.
C         MAPPING OF ARRAYS IN SHOW:
C             ODD * 4 WORDS OF TIME ARRAY - LOG OF POWER SPECTRUM
C             EVEN * 4 WORDS OF TIME (1ST SPAN) - SUM OF POWER SPECTRA
C             EVEN * 4 WORDS OF TIME (2ND SPAN) - LOG OF SUM OF POWERS
C             ODD * 4 WORDS OF DATA - POWER SPECTRUM (FOR EACH SPAN)
C             EVEN * 4 WORDS OF DATA - ZEROED (FOR AUTO CORR. TRANSFORM)
C         THE WEIGHT ARRAY IS LEFT ALONE
C             ODD * 4 WORDS OF EXTRA - FREQUENCY (UP TO N/2 * S)
C             EVEN * 4 WORDS OF EXTRA - CORRESPONDING PERIODS
C         INTERLEAVING IS USED PARTLY TO FACILITATE CALCOMP PLOTTING
C         (KEEPING REPEAT CYCLE CONSTANT)
C
C        PARAMETERS
      REAL*4 DATA(9)
C
C         COMMON
      include 'inodtabc.inc'
      include 'graphs.inc'
      include 'misc.inc'
      include 'pltlab.inc'
      include 'span.inc'
C
C         LOCAL VARIABLES
      LOGICAL*4 PRNT,PLT,PAP
      INTEGER*4  DY, HR, MN
      REAL*4 SC,SUMPSP,SUMPAV
      REAL*8 EFFSPN
      CHARACTER*20 AVG/'AVG POWER ALL SPANS '/
C
C         STATEMENT FUNCTIONS FOR INDICES TO ARRAYS
      include 'indices.inc'
C
C         LOG OF POWER
      KLP(ISPAN,IPOINT)= ( (NSPAN+ISPAN-1)*(NPOINT+2)+IPOINT )*2-1
C
C         FREQUENCY AND PERIOD
      KQ(IPOINT)= ( 3*NSPAN*(NPOINT+2)+IPOINT )*2-1
C
C         SUM OF POWERS
      KS(IPOINT)= ( NSPAN*(NPOINT+2)+IPOINT )*2
C
C         LOG OF SUM OF POWERS
      KLS(IPOINT)= ( (NSPAN+1)*(NPOINT+2)+IPOINT )*2
C
C         N INDEXES NUMBER OF POINTS TO HIGHEST FREQUENCY IN SPECTRUM
      N = NPOINT/2 + 1
      EFFSPN=SIZSPN
      IF(PADZ) EFFSPN=SIZSPN+SIZSPN
C
C         SET PRINT  & PLOT SWITCHES
      PRNT = MOD(IPRINT/4, 2) .EQ. 1
      PLT = MOD(IPLOT/4, 2) .EQ. 1
C
C         ZERO SPSP
      ISPS= KS(1)
      DO I = 1, N
         DATA(ISPS) = 0.0
         ISPS= ISPS+ 2
      END DO
      SUMPAV=0.
C
C         CALCULATE FREQUENCIES AND PERIODS
      IFRQ= KQ(1)
      DATA(IFRQ) = 0.0
      DATA(IFRQ+1) = 0.0
      DO 20 I = 2, N
      IFRQ=IFRQ+2
      X = (I-1)/EFFSPN
      DATA(IFRQ) = X
      DATA(IFRQ+1) = 1.0/X
   20 CONTINUE
C
C         WRITE HEADING
      IF (PRNT) WRITE (PRINT, 1000)
 1000 FORMAT('1*** ANALYSIS SECTION ***'/)
C
C         LOOP OVER SPANS
      DO 77 I = 1, NSPAN
      SUMPSP=0.
C
C         SET FLAG FOR SHOWING AVERAGE PSP ON LAST SPAN
      PAP = (I .EQ. NSPAN) .AND. AVGSPN
C
C         WRITE SPAN HEADING
      IF(PRNT) THEN
         WRITE(PRINT,25) I
   25    FORMAT('0FOURIER TRANSFORM OF DATA FOR SPAN',I4)
         IF(PAP) THEN
            WRITE(PRINT,35) AVG
   35       FORMAT('0',49X,'FREQ    PERIOD'/ '    COS',11X,'SIN',11X,
     1       'POWER SPECT       (C/D)   DAYS  HRS  MIN  SEC',7X,A20)
         ELSE
            WRITE(PRINT,35)
         ENDIF
      ENDIF
C
C         SET INDICES
      IDAT= KD(I, 1)
      ILP = KLP(I, 1)
      ILS = KLS(1)
      IFRQ= KQ(1)
      ISPS= KS(1)
C
C         LOOP OVER POINTS
      DO 70 J = 1, NPOINT
C
C         SQUARE TERMS FOR POWER SPECTRUM
      PSPEC = DATA(IDAT)**2 + DATA(IDAT+1)**2
C
C         IF PAST N, GO STORE FOR AUTOCORR.
      IF (J.LE.N) THEN
C
C         BREAK PERIOD
         SC = DATA(IFRQ+1)+0.1/864E2
         DY = INT(SC)
         SC = (SC - DY)*24.0
         HR = INT(SC)
         SC = (SC - HR)*60.0
         MN = INT(SC)
         SC = (SC - MN)*60.0 - 0.1
         IF(SC.LT.0.) SC=0.
         SUMPSP=SUMPSP+PSPEC
C
C         SUM POWERS
         IF(AVGSPN) DATA(ISPS) = DATA(ISPS)+PSPEC
C
         IF(PAP) THEN
C     AVERAGE POWERS
            DATA(ISPS) = DATA(ISPS)/NSPAN
            SUMPAV=SUMPAV+DATA(ISPS)
            IF(PRNT) WRITE(PRINT,1001) DATA(IDAT),DATA(IDAT+1),PSPEC,
     1       DATA(IFRQ),DY,HR,MN,SC,DATA(ISPS)
C     STORE LOG OF SUMS OF POWERS FOR PLOTTING
            DATA(ILS) = ALOG10(DATA(ISPS))
         ELSE
            IF(PRNT) WRITE (PRINT,1001) DATA(IDAT),DATA(IDAT+1),PSPEC,
     1       DATA(IFRQ),DY,HR,MN,SC
 1001       FORMAT (' ',1P,3E14.5,0PF12.4,I7,I5,I5,0PF7.2,1PE16.5)
         ENDIF
      ENDIF
C
C         STORE POWER, ZERO IMAGINARY PART, AND LOG OF POWER
      DATA(IDAT) = PSPEC
      DATA(IDAT+1) = 0.0
      DATA(ILP) = ALOG10(PSPEC)
C
C         INCREMENT INDICES
      IDAT= IDAT+ 2
      ILP = ILP + 2
      ILS = ILS + 2
      IFRQ= IFRQ+ 2
      ISPS= ISPS+ 2
   70 CONTINUE
C PRINT AVERAGE POWER OVER ALL FREQUENCIES
      IF(PRNT) THEN
         IF(PAP) THEN
            WRITE(PRINT,75) SUMPSP/N,SUMPAV/N
         ELSE
            WRITE(PRINT,75) SUMPSP/N
   75       FORMAT(' AVERAGE POWER:',14X,1PE14.5,36X,E16.5)
         ENDIF
      ENDIF
   77 CONTINUE
C
C         SEE WHETHER TO PLOT
      IF (.NOT. PLT) RETURN
C
C           SET UP PLOT LABELS
      LLX=22
      CALL MVC('FREQUENCY (CYCLES/DAY)',1,LLX,XLAB,1)
      LLY=12
      CALL MVC('LOG OF POWER',1,LLY,YLAB,1)
C
C         LOOP THRU SPANS
      DO 90 I = 1, NSPAN
C
C         SET FLAG FOR SHOWING AVERAGE PSP ON LAST SPAN
      PAP = (I .EQ. NSPAN) .AND. AVGSPN
C
C         SET INDICES TO 1 BEHIND FIRST ELEMENT
      IFRQ= KQ(1) - 1
      ILS = KLS(1) - 1
      ILP = KLP(I, 1) - 1
C
C         LOOP THRU INDEX ARRAY FOR SECTIONS OF SPECTRA TO BE PLOTTED
      DO 80 J = 1, 20, 2
      INDEX1 = INDEX(J)
      INDEX2 = INDEX(J+1)
C
C         IF ANY ODD INDEX AFTER FIRST IS ZERO, QUIT
      IF (J .GT. 1 .AND. INDEX1 .LE. 0) GO TO 90
C
C         IF FIRST INDEX ZERO, SET TO ONE
      IF (INDEX1 .LE. 0) INDEX1 = 1
C
C         IF SECOND INDEX ZERO OR .GT. N, SET TO N
      IF ((INDEX2 .LE. 0) .OR. (INDEX2 .GT. N)) INDEX2 = N
C
C         NOW CONVERT SECOND INDEX TO NUMBER OF POINTS TO BE PLOTTED
      INDEX2 = INDEX2 - INDEX1 + 1
C
C         MULTIPLY INDEX1 BY TWO BECAUSE OF INTERLEAVED ARRAYS
      INDEX1 = 2*INDEX1 - 1
C
C         TITLE AND PLOT POWER FOR SPAN
      LLT=26
      CALL MVC('POWER SPECTRUM FOR SPAN ',1,24,PTITLE,1)
      CALL EBCDI(I,PTITLE(25:26),2)
      CALL PLOTER(-1,DATA(IFRQ+INDEX1),DATA(ILP+INDEX1),INDEX2,2)
C
C         TITLE AND PLOT AVG POWER
      IF (.NOT. PAP) GO TO 80
      LLT=36
      CALL MVC('AVERAGE POWER SPECTRUM FOR ALL SPANS',1,LLT,PTITLE,1)
      CALL PLOTER(-1,DATA(IFRQ+INDEX1),DATA(ILS+INDEX1),INDEX2,2)
80    CONTINUE
90    CONTINUE
      RETURN
      END
