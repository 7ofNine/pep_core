      PROGRAM CPYNBDY
C     M.E.ASH   JUNE 1969   COPY N-BODY DATA SET AND WRITE MOON DATA SET
C REVISION OF  9 APRIL 1976  R.REASENBERG
C REVISED TO READ NAMELIST INPUT  - J.F.CHANDLER
C REVISED TO WRITE NEW NUTATION ONTO NBODY TAPE - R.KING 81/4/13
C REVISED TO ROTATE COORDINATES TO J2000 - R.KING  82/5/11
C REVISED TO INCLUDE CARD-IMAGE I/O - J.CHANDLER 92/12/4
C      (FROM VERSION 'A' OF NBODY1)
C REVISED TO ATTEMPT AUTOMATIC RECOVERY FOR SHORT TYPE-2 RECORD = JFC 97/3/27
C REVISED TO WRITE IAU2000 NUTATION ON NBODY TAPE - JFC 2007/1/9
C REVISED TO EXTRACT PLANET INTEGRATION TAPE - JFC 2009/7/15
C
      IMPLICIT NONE
      CHARACTER*8 LOAD/'20121207'/
      INTEGER*4 NMPRM,NMBOD
      PARAMETER (NMPRM=100,NMBOD=30)
      INTEGER*4 JD1/0/, JD2/99999999/, SPAN/99999999/
      INTEGER*4 IBODY/10/, JBODY/11/, IMN/0/, ITST/6/, IPLNT/0/
      INTEGER*2 NSKIP/0/, KSKIP/9999/
      LOGICAL*4 SKPHDR/.FALSE./, STOP/.FALSE./
      LOGICAL*4 IAU80N/.FALSE./
      LOGICAL*4 IAU2KN/.FALSE./
      INTEGER*2 NPLNT/0/
      REAL*10 BETA(6,10),MASS1(10),RELFTB(10),FRCT,MERC(6,10),
     1 BODY(6,5,8),MON(6,40),MASS(10),MEQINC/0._10/
      INTEGER*4 JDBD1,JDBD2,JDBD0(10),NMOON,JVLBD,NPG,JDBD,IVL,MVL,ITRT,
     1 I,J,K,JDS1,JDS2,IDIR,NBDY2,NBDYP2,NDMPBD,LIST1,LISTM,MINT5,NREC,
     2 JDM1,JDM2,JDM0,JVEL,IVLL,J1,J2,JDP,PINT5,PRCDIR
      CHARACTER*4 LEVEL1/'NB1B'/, TITLE(32), NAME(6,12),
     1  NAMERO(6)/' ERO','TAT ',4*'    '/,
     2  NAMMRO(6)/' MRO','TAT ',4*'    '/,
     3  BLANK/'    '/, LV1A/'NB1A'/
      CHARACTER*24 NAME24(12)
      EQUIVALENCE (NAME,NAME24)
      INTEGER*2 NPL(10),NCP(10),INTB(10),NBDY,NBDY1,
     1 INTBD,KBDY(40),KKBDY(80)
      REAL*10 PREC(3,3),TEMP(6),BDUM(3,3)
      REAL*4 EPSBD,PSID(40),EPSD(40),LIBRT(40,3)
      CHARACTER*72 TITLP/'........ EXTRACTED FROM N-BODY INTEGRATION'/
      CHARACTER*8 ANAME,ADATE
      INTEGER*2 MPLNT,MCENTR,IPAR,INTM,NCENTR,INTP
      REAL*10 FRACT/0._10/
      INTEGER*4 INTRD/0/
      REAL*8 DPSI,DEPS,TTI
      REAL*8 dpsi_ls, deps_ls,
     .       dpsi_plan, deps_plan,
     .       dpsi_fcn , deps_fcn ,
     .       dpsi_prec, deps_prec,
     .       dpsi_tot , deps_tot
C
C QUANTITIES FOR EXTRACTED SINGLE-BODY HEADER
      REAL*10 SECP/0._10/,CON1(12)/12*0._10/,CON2(NMPRM),CON(NMBOD-6)
      REAL*4 BEPS(6)/6*0./
      INTEGER*4 INTP1/0/,INTP2/0/,IFILTR/0/
      INTEGER*2 ICND/0/,IHRP/0/,IMINP/0/,KKP(100)/100*0/
      INTEGER*2 KP(NMPRM),NUMKI/8/,KI(8)/1,6*-1,0/
      INTEGER*2 NPARITR/0/,NPARIT1/1/,NPARPL(20)/20*0/

      CHARACTER*8 FORMTD(2)/'(1X,1P6D','22.15)  '/
      CHARACTER*1 LFRM(16),LNUM(6)/'1','2','3','4','5','6'/
      EQUIVALENCE (FORMTD(1),LFRM(1))
      INTEGER*4 LIST/999/, TAPERR/0/
C
      REAL*8 IZERO(115)/115*0D0/
      LOGICAL J2000/.FALSE./, CRDIN/.FALSE./, CRDOUT/.FALSE./
      LOGICAL TJ2000/.FALSE./
      REAL*8 CONVDS/4.84813681109535993591D-6/
      CHARACTER*4 LEV1/' CPY'/, LEVELI,LEVEL,LEVP(12),CZERO
      EQUIVALENCE (IZERO,CZERO)
C
C        INITIALIZE ITEMS NOT CARRIED BY OLD NBODY1 OUTPUT...
      DATA KBDY/40*0/, KKBDY/80*0/, EPSBD/1E-15/, ITRT/1/, NPG/999/,
     1  RELFTB/10*1._10/, LEVP/12*'    '/
C
      NAMELIST/INPUT/ IBODY,JBODY,IMN,ITST,SKPHDR,JD1,JD2,SPAN,NSKIP,
     1 NPLNT,LIST,STOP,IAU80N,J2000,TJ2000,CRDIN,CRDOUT,
     2 KBDY,KKBDY,EPSBD,ITRT,NPG,RELFTB,MEQINC,IAU2KN,IPLNT,TITLP
C
C INPUT IS IN THE FORM OF NAMELIST &INPUT ON UNIT 5.
C SELECT DATA WITHIN THE RANGE (JD1,JD2), BUT USE JD1+SPAN IF JD2 IS
C NOT INPUT.  ALSO, ALLOW 20 DAYS ON EITHER END TO PERMIT INTERPOLATION.
C IF JD1 AND/OR JD2 ARE POSITIVE, THEN THE SELECTED RANGE WILL NOT
C EXTEND BEYOND THE DATES IN THE INPUT TAPE HEADER RECORD.
C A NEGATIVE VALUE OF EITHER WILL CAUSE ITS ABSOLUTE VALUE TO BE USED
C REGARDLESS OF THE HEADER RECORD.  SPAN HAS THE SAME LOGIC.
C   IF ITST .GT. 0  WRITE JD AND FRACT ON ITST FOR EVERY NSKIP'TH
C        DATA RECORD WITHIN THE SELECTED JD SPAN.
C   NPLNT - PRINT COORDINATES FOR BODY NPLNT ON ITST. -3=>NUTATION,
C           -10=>LIBRATION
C   LIST - DUMP ONLY 1ST "LIST" POINTS FROM EACH RECORD
C   IBODY - INPUT NBODY DATA SET
C   JBODY - OUTPUT NBODY DATA SET
C   IMN  - OUTPUT MOON DATA SET
C   IPLNT  - OUTPUT SINGLE-BODY DATA SET, OTHER THAN MOON
C   SKPHDR - IF .TRUE., SKIP PRINTOUT OF HEADER ARRAYS
C   STOP - IF .TRUE., THEN STOP AFTER PRINTING OUT HEADER INFO
C   NSKIP - IF >0 PRINT ONLY EVERY NSKIP'TH RECORD ON ITST
C   IAU80N - IF .TRUE., COMPUTE IAU 80 NUTATION SERIES.  REPLACE
C            EXISTING NUTATION IF WRITING OUTPUT TAPE
C   IAU2KN - IF .TRUE., COMPUTE IAU 2000 NUTATION SERIES.  REPLACE
C            EXISTING NUTATION IF WRITING OUTPUT TAPE
C   J2000 - IF .TRUE. ROTATE COORDINATES FROM B1950 TO J2000
C   TJ2000- IF .TRUE., ASSUME THE COORDINATES ARE ALREADY ROTATED
C           AND MAKE THE HEADER REFLECT THAT FACT
C   CRDIN - IF .TRUE. INPUT IS CARD-IMAGE FILE (SEE NBODY1)
C   CRDOUT- IF .TRUE. OUTPUT IS CARD-IMAGE FILE (SEE NBODY1)
C   MEQINC- MOON EQUATOR'S INCLINATION (USED ONLY FOR CRDOUT)
C
C*  START=100
      READ(5,INPUT,END=100)
  100 IF(NPLNT.EQ.10 .AND. IPLNT.GT.0) THEN
         IMN=IPLNT
         IPLNT=0
      ENDIF
      IF(IMN.GT.0) NPLNT=10
      WRITE(6,110) IBODY,LOAD,JBODY,ITST,IMN
  110 FORMAT('1COPY N-BODY TAPE   IBODY=',I3,30X,'PGM=',A8/
     1  '   OUTPUT ON  JBODY=',I3,'   PRINT ON ITST=',I3,
     2  '   MOON ON IMN=',I3)
      WRITE(6,120) NSKIP,SKPHDR,STOP,NPLNT,LIST,IAU80N,J2000,CRDIN,
     1  CRDOUT,TJ2000,IAU2KN,IPLNT
  120 FORMAT('0  NSKIP=',I5,'  SKPHDR=',L1,'  STOP=',L1,
     1 '   DUMP NPLNT=',I3,'  LIST=',I3,'  IAU80N=',L1,'  J2000=',L1/
     1 '  CRDIN=',L1,'  CRDOUT=',L1,'  TJ2000=',L1,'  IAU2KN=',L1,
     . '  IPLNT=',I3)
C
C READ THE FIRST RECORD FROM THE NBODY TAPE
  125 IF(CRDIN) THEN
         READ(IBODY,140,ERR=500,END=520) (TITLE(I),I=1,32),LEVELI
      ELSE
         READ(IBODY,ERR=500,END=520) (TITLE(I),I=1,32)
      ENDIF
      WRITE(6,130) TITLE
  130 FORMAT('0TITLE'/ '0',32A4)
      IF(JBODY.GT.0) THEN
C WRITE TO EXPORT TAPE.  LEVEL1 HERE IS A FLAG FOR FORMAT OF CARD-IMAGE
C FILE.  IF LEVELI IS BLANK, THE TAPE WAS WRITTEN BY A PRE-'A' VERSION.
         IF(CRDOUT) THEN
            WRITE(JBODY,140) (TITLE(I),I=1,32),LEVEL1
  140       FORMAT(20A4)
         ELSE
            WRITE(JBODY) TITLE
         ENDIF
      ENDIF
C
      IF(CRDIN) THEN
         READ(IBODY,360,END=580) NBDY,(NPL(I),I=1,NBDY)
         READ(IBODY,370,END=580) (NCP(I),I=1,NBDY)
         READ(IBODY,370,END=580) (INTB(I),I=1,NBDY)
         READ(IBODY,375,END=580) JDBD1,JDBD2,(JDBD0(I),I=1,NBDY)
         READ(IBODY,380,END=580) ((BETA(I,J),I=1,6),J=1,NBDY)
         READ(IBODY,380,END=580) MEQINC
         NBDYP2=NBDY+2
         READ(IBODY,385,END=580) ((NAME(I,J),I=1,6),LEVP(J),J=1,NBDYP2)
         READ(IBODY,390) NMOON,NBDY1,INTBD,JVLBD,(MASS1(I),I=1,NBDY)
C
C READ FURTHER HEADER INFORMATION.  SOURCE DEPENDS ON VERSION OF NBODY1
         IF(LEVELI.NE.BLANK) THEN
            READ(IBODY,395,END=580) EPSBD,ITRT,NPG,LEVEL,KBDY,KKBDY,
     1       (RELFTB(I),I=1,NBDY)
            IF(LEVELI.EQ.LV1A) READ(IBODY,140) (LEVP(I),I=1,NBDY)
         ENDIF
      ELSE
         IF(TAPERR.EQ.0) THEN
            READ(IBODY,ERR=560,END=580) NBDY,(NPL(I),I=1,NBDY),
     1       (NCP(I),I=1,NBDY),(INTB(I),I=1,NBDY),JDBD1,JDBD2,
     2       (JDBD0(I),I=1,NBDY),((BETA(I,J),I=1,6),J=1,NBDY),
     3       ((NAME(I,J),I=1,6),J=1,NBDY),NMOON,NBDY1,INTBD,JVLBD,EPSBD,
     4       KBDY,ITRT,NPG,(MASS1(I),I=1,NBDY),
     5       (RELFTB(I),I=1,NBDY),KKBDY,LEVEL,(LEVP(I),I=1,NBDY)
         ELSE
            READ(IBODY,ERR=560,END=580) NBDY,(NPL(I),I=1,NBDY),
     1       (NCP(I),I=1,NBDY),(INTB(I),I=1,NBDY),JDBD1,JDBD2,
     2       (JDBD0(I),I=1,NBDY),((BETA(I,J),I=1,6),J=1,NBDY),
     3       ((NAME(I,J),I=1,6),J=1,NBDY),NMOON,NBDY1,INTBD,JVLBD,EPSBD,
     4       KBDY,ITRT,NPG,(MASS1(I),I=1,NBDY),
     5       (RELFTB(I),I=1,NBDY)
            LEVEL=CZERO
         ENDIF
         NBDYP2=NBDY+2
      ENDIF
C
C           SET UP DUMP POINTERS
      NDMPBD=0
      IF(NPLNT.EQ.-3) NDMPBD= NBDY+1
      IF(NPLNT.EQ.-10) NDMPBD= NBDY+2
C
C        CHANGE NULLS TO BLANKS, FIND MASS FROM INVERSE MASS
      IF(LEVEL.EQ.CZERO) LEVEL=LEV1
      DO I=1,NMPRM
         CON2(I)=0._10
         KP(I)=0
      END DO
      KP(88)=2
      KP(100)=-1
      DO I=1,NMBOD-6
         CON(I)=0._10
      END DO
      DO I=1,NBDY
         IF(LEVP(I).EQ.CZERO) LEVP(I)=LEVEL
         IF(NPLNT.EQ.NPL(I)) THEN
            NDMPBD=I
            ANAME=NAME24(I)(1:8)
            TITLP(1:8)=NAME24(I)(9:16)
            ADATE=NAME24(I)(17:24)
            CON2(31)=RELFTB(I)
            CON(24)=RELFTB(I)
         ENDIF
         IF(NPL(I).GT.0.AND.NPL(I).LE.30) THEN
            CON2(NPL(I))=MASS1(I)
            IF(MASS1(I).GT.1._10) CON2(NPL(I))=1._10/MASS1(I)
         ENDIF
         MASS(I)=0._10
         IF(MASS1(I).NE.0._10) MASS(I)=1._10/MASS1(I)
      END DO
C        FILL IN NAMES FOR EARTH AND MOON ROTATION
      DO 162 I=1,6
      NAME(I,NBDY+1)=NAMERO(I)
  162 NAME(I,NBDY+2)=NAMMRO(I)
      LEVP(NBDY+1)=LEVEL
      LEVP(NBDY+2)=LEVEL
C
      IF(IMN.GT.0) WRITE(IMN) ANAME,TITLP,ADATE,LEV1
      IF(IPLNT.GT.0 .AND. NPLNT.GT.0) WRITE(IPLNT) ANAME,TITLP,ADATE,
     . LEV1
C           SET UP DUMP LENGTH
      LIST1=LIST
      IF(LIST1.LE.0) LIST1=1
      LISTM=10
      IF(NDMPBD.GT.1) LISTM=5
      IF(NDMPBD.EQ.NBDY) LISTM=40
      IF(LIST1.GT.LISTM) LIST1=LISTM
C
C         GET ROTATION MATRIX TO J2000
      IF(TJ2000) KKBDY(70)=1
      IF(J2000) THEN
         IF(KKBDY(70).EQ.1) THEN
            J2000=.FALSE.
            WRITE(6,166) KKBDY(70)
  166       FORMAT(' COORDINATE TRANSFORMATION SKIPPED, KKBDY(70)=',I5)
         ELSE
            KKBDY(70)=1
            CALL PR2000(PREC)
            PRCDIR=-3
            WRITE(6,169) PREC
  169       FORMAT(' PRECESSION MATRIX FROM B1950.0 TO J2000:'/
     1       (3F20.16))
         ENDIF
      ENDIF
      KKP(70)=KKBDY(70)
C TRANSFORM ORBITAL ELEMENTS TO MATCH THE COORDINATES
      IF(J2000 .AND. BETA(1,1).NE.0._10) THEN
         DO K=1,NBDY
            IF(BETA(1,K).NE.0._10) CALL ROTELT(NPL(K),BETA(1,K),BDUM,
     .       PREC,PRCDIR,0)
         END DO
      ENDIF
C
      WRITE(6,171) JDBD1,JDBD2,NBDY
  171 FORMAT('0JDBD1,JDBD2,NBDY=',6X,2I10,I5)
      IDIR=1
      IF(JDBD1.GT.JDBD2) IDIR=-1
      MINT5=4*IDIR
      IF(SKPHDR) GOTO 300
C*  START=200
      WRITE(6,200)
  200 FORMAT('0    NPL  NPC    NAME',20X,'MASS1',20X,'MASS',
     1      22X,'JD0', 8X,'RELFTB',04X,'INTB')
      WRITE(6,210) (NPL(K),NCP(K),(NAME(J,K),J=1,6),
     1      MASS1(K),MASS(K),JDBD0(K),RELFTB(K),INTB(K),
     2      K=1,NBDY)
  210 FORMAT(/ (2X,2I5,2X,6A4,1P,2D25.16,I12,0PF10.5,I5) )
      WRITE(6,220)
  220 FORMAT('0    NPL    NAME    COND:',
     1      5X,'A',17X,'E',17X,'INC',15X,'ASC',16X,'PER',16X,'ANOM')
      WRITE(6,230) (NPL(K),(NAME(J,K),J=1,2),(BETA(J,K),J=1,6),K=1,NBDY)
  230 FORMAT(/(2X,I5,2X,2A4,3F18.14,3F19.14))
      WRITE(6,240) KBDY,NMOON,NBDY1,INTBD,JVLBD,INTRD,NPG,EPSBD
  240 FORMAT('0KBDY=    ',4(5X,5I5),/,10X,4(5X,5I5)/
     1      '0NMOON,NBDY1,INTBD,JVLBD,INTRD,NPG,EPSBD',6I10,1PE12.5)
      WRITE(6,250) KKBDY
  250 FORMAT('0KKBDY=',(T12,4(5X,5I5)))
C
C         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C*  START=300
  300 CONTINUE
      IF(STOP) GOTO 9030
      IF(JD2.EQ.99999999) JD2=ISIGN( IABS(JD1)+IABS(SPAN), SPAN)
C
      WRITE(6,310) JD1,JD2
  310 FORMAT('0JD1, JD2 REQUESTED   ',2I10)
C
      JDS1=MAX0( MIN0(JDBD1,JDBD2), JD1-20 )
      JDS2=MIN0( MAX0(JDBD1,JDBD2), JD2+20 )
      IF(JD1.LT.0) JDS1=-JD1-20
      IF(JD2.LT.0) JDS2=-JD2+20
      JDBD1=JDS1
      JDBD2=JDS2
      IF(IDIR.GT.0) GOTO 315
      JDBD1=JDS2
      JDBD2=JDS1
  315 WRITE(6,320) JDBD1,JDBD2
  320 FORMAT('0JDBD1,JDBD2 SELECTED ',2I10)
      NREC=0
      NBDY2=NBDY1-1
C
C*  START=350
  350 IF(CRDIN) THEN
         READ(IBODY,431,END=9000) JDBD,FRCT,IVL,MVL
         DO 353 I=1,10
  353    READ(IBODY,433) (MERC(J,I),J=1,IVL)
         DO 355 I=1,NBDY2
  355    READ(IBODY,433) ((BODY(K,J,I),K=1,IVL),J=1,5)
         READ(IBODY,433) ((MON(I,J),I=1,MVL),J=1,40)
         READ(IBODY,435) (PSID(I),EPSD(I),I=1,40)
         READ(IBODY,436) ((LIBRT(J,I),I=1,3),J=1,40)
      ELSE
         READ(IBODY,END=9000)   JDBD, FRCT, IVL, MVL,
     1   ((MERC(I,J),I=1,IVL),J=1,10),
     2   (((BODY(I,J,K),I=1,IVL),J=1,5),K=1,NBDY2),
     3   ((MON(I,J),I=1,MVL),J=1,40),(PSID(J),EPSD(J),J=1,40),
     4   ((LIBRT(J,I),I=1,3),J=1,40)
      ENDIF
C
      IF((JDBD-JDBD1)*IDIR.LT.0) GOTO 350
      IF(NREC.GT.0) GOTO 408
C
C        TIME TO START OUTPUT.  FIRST NOTE THE DATE.
      JDBD1=JDBD
C        NOW WRITE 2ND RECORD, IF DESIRED.
      IF(JBODY.GT.0) THEN
         IF(CRDOUT) THEN
            WRITE(JBODY,360) NBDY,(NPL(I),I=1,NBDY)
  360       FORMAT(I2,3X,10I3)
            WRITE(JBODY,370) (NCP(I),I=1,NBDY)
  370       FORMAT(10I3)
            WRITE(JBODY,370) (INTB(I),I=1,NBDY)
            WRITE(JBODY,375) JDBD1,JDBD2,(JDBD0(I),I=1,NBDY)
  375       FORMAT(2I10/10I8)
            WRITE(JBODY,380) ((BETA(I,J),I=1,6),J=1,NBDY)
  380       FORMAT(1P,3D25.18)
            WRITE(JBODY,380) MEQINC
            WRITE(JBODY,385) ((NAME(I,J),I=1,6),LEVP(J),J=1,NBDYP2)
  385       FORMAT(7A4)
            WRITE(JBODY,390) NMOON,NBDY1,INTBD,JVLBD,(MASS1(I),I=1,NBDY)
  390       FORMAT(4I5/ (1P,D25.18))
C
C VERSION B: INCLUDE THE FOLLOWING HEADER INFORMATION NEEDED BY NBODY4
C
            WRITE(JBODY,395) EPSBD,ITRT,NPG,LEVEL,KBDY,KKBDY,
     1       (RELFTB(I),I=1,NBDY)
  395       FORMAT(E15.8,2I6,1X,A4/ 2(16I5/),8I5/ 5(16I5/),(1P,3D25.18))
         ELSE
            WRITE(JBODY) NBDY,(NPL(I),I=1,NBDY),(NCP(I),I=1,NBDY),
     1      (INTB(I),I=1,NBDY),JDBD1,JDBD2,(JDBD0(I),I=1,NBDY),
     2      ((BETA(I,J),I=1,6),J=1,NBDY),((NAME(I,J),I=1,6),J=1,NBDY),
     3      NMOON,NBDY1,INTBD,JVLBD,EPSBD,KBDY,ITRT,NPG,
     4      (MASS1(I),I=1,NBDY),
     5      (RELFTB(I),I=1,NBDY),KKBDY,LEVEL,(LEVP(I),I=1,NBDY),IZERO
         ENDIF
      ENDIF
C
      IF(IMN.GT.0) THEN
         MPLNT =10
         MCENTR=3
         KKP(1)=3
         IPAR  =1
         INTM  =-1
         JDM1  =JDBD1
         JDM0  =0
         JDM2  =JDBD2-10*IDIR
         WRITE(IMN) MPLNT,MCENTR,IPAR,INTM,JDM1,JDM0,JDM2,NMPRM,NMBOD,
     1    (BETA(I,NDMPBD),I=1,6),CON,CON1,CON2,BEPS,KP,NPG,ITRT,
     2    ICND,INTP1,INTP2,IHRP,IMINP,SECP,KKP,IFILTR,LEVP(NDMPBD),
     3    NUMKI,(KI(I),I=1,NUMKI),
     4    NPARITR,NPARIT1,(NPARPL(I),I=1,NPARIT1),IZERO

      ENDIF
      IF(IPLNT.GT.0 .AND. NPLNT.GT.0) THEN
         NCENTR=0
         IPAR=1
         INTP=2
         IF(NPLNT.GT.1) INTP=4
         PINT5=INTP*5*IDIR
         WRITE(IPLNT) NPLNT,NCENTR,IPAR,INTP,JDBD1,JDBD0(NDMPBD),JDBD2,
     .    NMPRM,NMBOD,(BETA(I,NDMPBD),I=1,6),IZERO,IZERO,IZERO,IZERO
      ENDIF
C
      WRITE(6,407) JDBD
  407 FORMAT(/'0START OF COPY AT ',I8)
  408 CONTINUE
      IF((JDBD-JDBD2)*IDIR.GT.0) GOTO 9000
C           ROTATE TO J2000 IF REQUESTED
      IF(.NOT.J2000) GOTO 413
      JVEL=1
      IF(IVL.GE.6) JVEL=2
      DO 409 J=1,10
      CALL PRODCT(PREC,MERC(1,J),TEMP,-3,3,JVEL)
      DO 409 I=1,IVL
  409 MERC(I,J)= TEMP(I)
      DO 410 K=1,NBDY2
      DO 410 J=1,5
      CALL PRODCT(PREC,BODY(1,J,K),TEMP,-3,3,JVEL)
      DO 410 I=1,IVL
  410 BODY(I,J,K)= TEMP(I)
      JVEL=1
      IF(MVL.GE.6) JVEL=2
      DO 411 J=1,40
      CALL PRODCT(PREC,MON(1,J),TEMP,-3,3,JVEL)
      DO 411 I=1,MVL
  411 MON(I,J)= TEMP(I)
C           REPLACE NUTATION SERIES IF REQUESTED
  413 IF(IAU80N) THEN
         TTI=JDBD-2451545
         TTI=TTI+FRCT-0.5D0
         DO I=1,40
            CALL IAU80(TTI/36525D0,DPSI,DEPS)
            PSID(I)=DPSI*CONVDS
            EPSD(I)=DEPS*CONVDS
            TTI=TTI+0.5D0*IDIR
         END DO
      ELSE IF(IAU2KN) THEN
         TTI=JDBD+FRCT-0.5D0
         DO I=1,40
            CALL MHB_2000( TTI, dpsi_ls, deps_ls,
     .                    dpsi_plan, deps_plan,
     .                    dpsi_fcn , deps_fcn ,
     .                    dpsi_prec, deps_prec,
     .                    dpsi_tot , deps_tot    )
            PSID(I)=(dpsi_ls+dpsi_plan)*1d-3*CONVDS
            EPSD(I)=(deps_ls+deps_plan)*1d-3*CONVDS
            TTI=TTI+0.5D0*IDIR
         END DO
         
      ENDIF
      NREC=NREC+1
      IF(ITST.LE.0) GOTO 430
      KSKIP=KSKIP+1
      IF(KSKIP.LT.NSKIP) GOTO 430
      KSKIP=0
      WRITE(ITST,420) JDBD,FRACT,IVL,MVL
  420 FORMAT(' JDBD, FRACT =',I10,F12.7,'   IVL,MVL=',2I3)
C           DUMP COORDINATES IF REQUESTED
      IF(NDMPBD.LE.0) GOTO 430
      IVLL=IVL
      IF(NDMPBD.EQ.NBDY) IVLL=MVL
      IF(NDMPBD.EQ.NBDY+1) IVLL=2
      IF(NDMPBD.EQ.NBDY+2) IVLL=3
      IF(IVLL.GT.6) IVLL=6
      LFRM(7)=LNUM(IVLL)
      IF(NDMPBD.EQ.1) THEN
C           DUMP MERCURY
         WRITE(ITST,FORMTD) ((MERC(I,J),I=1,IVLL),J=1,LIST1)
      ELSE IF(NDMPBD.LT.NBDY) THEN
C           DUMP PLANET
         WRITE(ITST,FORMTD) ((BODY(I,J,NDMPBD-1),I=1,IVLL),J=1,LIST1)
C           DUMP MOON
      ELSE IF(NDMPBD.EQ.NBDY) THEN
         WRITE(ITST,FORMTD) ((MON(I,J),I=1,IVLL),J=1,LIST1)
      ELSE IF(NDMPBD.EQ.NBDY+1) THEN
C           DUMP NUTATION
         WRITE(ITST,FORMTD) (PSID(I),EPSD(I),I=1,LIST1)
      ELSE IF(NDMPBD.EQ.NBDY+2) THEN
C           DUMP LIBRATION
         WRITE(ITST,FORMTD) ((LIBRT(J,I),I=1,3),J=1,LIST1)
      ENDIF
  430 IF(JBODY.GT.0) THEN
         IF(CRDOUT) THEN
            WRITE(JBODY,431) JDBD,FRCT,IVL,MVL
  431       FORMAT(I10,1P,D25.18,2I5)
            WRITE(JBODY,433) ((MERC(J,I),J=1,IVL),I=1,10)
  433       FORMAT(1P,3D25.18)
            WRITE(JBODY,433) (((BODY(K,J,I),K=1,IVL),J=1,5),I=1,NBDY2)
            WRITE(JBODY,433) ((MON(I,J),I=1,MVL),J=1,40)
            WRITE(JBODY,435) (PSID(I),EPSD(I),I=1,40)
  435       FORMAT(2E15.8)
            WRITE(JBODY,436) ((LIBRT(J,I),I=1,3),J=1,40)
  436       FORMAT(3E15.8)
         ELSE
            WRITE(JBODY)  JDBD, FRCT, IVL, MVL,
     1      ((MERC(I,J),I=1,IVL),J=1,10),
     2      (((BODY(I,J,K),I=1,IVL),J=1,5),K=1,NBDY2),
     3      ((MON(I,J),I=1,MVL),J=1,40),(PSID(J),EPSD(J),J=1,40),
     4      ((LIBRT(J,I),I=1,3),J=1,40)
         ENDIF
      ENDIF
C
      IF(IMN.GT.0) THEN
         JDP=JDBD
         DO 480 K=1,5
            J2 =K*8
            J1 =J2-7
            WRITE(IMN) JDP,FRACT,MVL,((MON(I,J),I=1,MVL),J=J1,J2),
     1       (PSID(J),EPSD(J),J=J1,J2),
     2       ((LIBRT(J,I),I=1,3),J=J1,J2),(IZERO(I),I=1,10)
            JDP =JDP+MINT5
  480    CONTINUE
      ENDIF
      IF(IPLNT.GT.0 .AND. NPLNT.GT.0) THEN
         JDP=JDBD
         DO J1=1,LISTM,5
            J2 =J1+4
            IF(NDMPBD.EQ.1) THEN
               WRITE(IPLNT) JDP,FRACT,IVL,((MERC(I,J),I=1,IVL),J=J1,J2),
     2          (IZERO(I),I=1,10)
            ELSE
               WRITE(IPLNT) JDP,FRACT,IVL,((BODY(I,J,NDMPBD-1),I=1,IVL),
     .          J=J1,J2),
     2          (IZERO(I),I=1,10)
            ENDIF
            JDP =JDP+PINT5
         END DO
      ENDIF
C
      GOTO 350
C
C*  START=500
C
C     READ FILE ERROR SEGMENT
C
  500 WRITE(6,510)
  510 FORMAT('-ERROR IN READING TITLE OF NBODY TAPE - FORCING END')
      GOTO 9030
  520 WRITE(6,530)
  530 FORMAT('-END OF FILE ENCOUNTERED IN READING TITLE OF NBODY ')
      GOTO 9030
  560 WRITE(6,570) TAPERR
  570 FORMAT('-ERROR READING SECOND RECORD OF NBODY TAPE (',I2,
     . ' PREVIOUS)')
      IF(TAPERR.GT.0) GOTO 9030
      TAPERR=TAPERR+1
      REWIND IBODY
      GOTO 125
  580 WRITE(6,590)
  590 FORMAT('-END OF FILE READING SECOND RECORD OF NBODY TAPE')
      GOTO 9030
C
C*  START=9000
 9000 WRITE(6,9010) JDBD,NREC
 9010 FORMAT('-END OF RUN AT ',I8,I10,' RECORDS PUT OUT')
      REWIND IBODY
      IF(JBODY.LE.0) GOTO 9020
      END FILE JBODY
      REWIND JBODY
 9020 IF(IMN.LE.0) GOTO 9030
      END FILE IMN
      REWIND IMN
 9030 STOP
      END
