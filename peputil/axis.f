      SUBROUTINE AXIS(X,Y,BCD,N,SIZE,THETA,XSTRT,DX,DV)
C           DRAW AND LABEL AN AXIS WITH AUTOMATIC SCALING OF LABELS,
C           OPTIONAL TITLE, ARBITRARY ORIENTATION AND POSITION.
C           COMPATIBLE WITH STANDARD CALCOMP CALLS.
C           REQUIRES COMMON /PLTTYP/ FOR DEFINING PLOTTING DEVICE +
C           CHARACTER PROPORTIONS
C
C        PARAMETERS
      INTEGER*4 N
      CHARACTER*(*) BCD
      REAL*4 X,Y,SIZE,THETA
      REAL*8 XSTRT,DX,DV
C
C   X,Y    R*4 PAGE COORDINATES OF THE STARTING POINT OF THE AXIS.
C          BOTH ARE IN PAGE INCHES.
C   BCD    CHARACTER ARRAY OF TEXT INFORMATION FOR AXIS TITLE.
C          (IGNORED IF N=0).
C   N      I*4 NUMBER OF CHARACTERS IN TITLE.  A NEGATIVE N PLACES
C          THE ANNOTATION ON THE CLOCKWISE SIDE OF AXIS LINE AND
C          VICE-VERSA.  IF N=0, THEN OMIT THE TITLE AND ALL
C          ANNOTATION.  IF ABS(N)=999, THEN JUST OMIT THE TITLE
C          AND LABELS.
C   SIZE   R*4 LENGTH IN PAGE INCHES OF THE AXIS TO BE DRAWN.  SIZE
C          SHOULD ORDINARILY BE A MULTIPLE OF (10/DV).
C   THETA  R*4 ANGLE OF THE AXIS MEASURED COUNTER-CLOCKWISE
C          FROM X AXIS IN DEGREES.
C   XSTRT  R*8 COORDINATE VALUE OF VARIABLE AT THE STARTING POINT
C          OF THE AXIS.
C   DX     R*8 PLOT SCALE IN COORDINATE-UNITS PER PAGE INCH.
C          IF 0, THEN SKIP ANNOTATIONS.
C   DV     R*8 NUMBER OF TICK MARKS PER 10 INCHES OF PAPER.
C          DV SHOULD NOT BE MORE THAN 20.
C
C        COMMON
      include 'plttyp.inc'
C
C        LOCAL
      REAL*8 RANGE,STEP,COORD,DIV,DIV8,EPSI/1D-1/,EPSTEP,PRVCRD,SPACE,
     . TICK,TICK0
      CHARACTER*20 EXPLAB
      INTEGER*4 NDEC,ID
      LOGICAL LOGAX,LOGSUB
      REAL*4 DXB,DYB,DXC,DYC,DX10,DY10,DXM,DYM,DXT,DYT,XN,YN,XT,YT
      REAL*4 LD(2:9)/.30103,.47712,.60206,.69897,.77815,.84510,.90309,
     . .95424/
      REAL*4 TL(2:9)/3*0.5,0.8,4*0.5/
C
C   SPACE  IS DOUBLE PRECISION DISTANCE BETWEEN TICKS.
C   SPL    SETS THE SCALE FOR PLOT LABELS
C   DIV8   IS DOUBLE PRECISION TICKS PER INCH.
C
      LOGAX=.FALSE.
      GOTO 40
C
      ENTRY LAXIS(X,Y,BCD,N,SIZE,THETA,XSTRT,DX,DV)
      LOGAX=.TRUE.
C
   40 IF(PROPOR.LE.0. .OR. PROPOR.GE.1.5) THEN
         WRITE(6,50) PROPOR
   50    FORMAT(' PROPOR=',1PE10.3,', STOP IN AXIS')
         STOP 10
      ENDIF
      IF(SIZE.LE.0.) RETURN
      IF(PLTRTC.NE.0.) RETURN
C
C        FIRST, SET UP FOR NO LABELS, IN CASE N=0
      HGT=0.12
      SPACE=SIZE
      NTICK=0
C           GET ROTATION FACTORS
      THT=THETA*1.7453293E-2
      IF(ABS(THT).GT.1E20) THT=0.
      CTHT=COS(THT)
      STHT=SIN(THT)
      IF(N.EQ.0) GOTO 205
C
      DIV=DV
      IF(DIV.LT.2.0.OR.DIV.GT.26.) DIV=10.
      IF(LOGAX) THEN
         TINC=10.*ABS(DX)
         LOGSUB=TINC.LT.0.999999*DIV
         IF(TINC.NE.0.) DIV=TINC
      ENDIF
      DIV8=DIV/1D1
      SPACE=1D0/DIV8
      TICK0=0.
      IF(DX.EQ.0.) GOTO 70
      TICK=DIV8*SIZE
      TICK0=DMOD(XSTRT*DIV8/DX,1D0)
      IF(TICK0.LE.0.01) TICK0=TICK0+1.
      IF(TICK0.GT.0.9999) TICK0=1.
      TICK0=1.-TICK0
      NTICK=TICK-TICK0+0.01
   70 IF(NTICK.EQ.0 .AND. .NOT.LOGAX) GOTO 205
      IF(NTICK.LT.0) GOTO 205
C
C           COMPUTE PROPER CHARACTER SIZES
      SPL=SPACE
      IF(LOGAX) SPL=SPL*2.
      IF(SPL.GT.1.0) SPL=1.0
      HGT=SPL*0.14
      IF(LOCALE.EQ.5) HGT=0.143
      WID=HGT*PROPOR
      IF(LOGAX) THEN
         HGTX=HGT*0.7
         WIDX=WID*0.7
      ELSE
         HGTX=HGT
         WIDX=WID
      ENDIF
      HGTL=HGT*1.2
      WIDL=WID*1.2
      IF(LOCALE.EQ.2) THEN
C           SPECIAL CODE FOR PRINTER PLOT CHARACTERS
         IF(SPL.LT.0.85) SPL=0.85
         HGT=0.07777777
         WID=0.06666666
         IF(THETA.EQ.90.) WID=0.125
         HGTL=HGT
         WIDL=WID
         HGTX=HGT
         WIDX=WID
      ENDIF
      NLIM=SPACE/WID
      IF(NLIM.GT.12) NLIM=12
      RNGMX=10.**NLIM
C
C           VECTOR FOR ONE TICK INTERVAL
      DXT=CTHT*SPACE
      DYT=STHT*SPACE
      A=N
      NABS=IABS(N)
      IF(NABS.EQ.999) GOTO 205
C
C           GET CORRECT SCALING OF LABELS
      RANGE=DMAX1(DABS(XSTRT),DABS(XSTRT+SIZE*DX))
      STEP=DABS(DX)/DIV8
      IF(STEP.EQ.0D0) STEP=RANGE
      IX=0
      IF(RANGE.LT.1D4.AND.RANGE.LT.RNGMX) GOTO 110
      IF(STEP.LE.1D3) GOTO 110
   95 IF(STEP.LT.10.) GOTO 110
      IF(STEP.GT.1D4) GOTO 100
      ISTEP=STEP+EPSI
      IF(DABS(STEP-ISTEP).GT.EPSI) GOTO 120
  100 RANGE=RANGE/1D1
      STEP=STEP/1D1
      IX=IX+1
      GOTO 95
  110 IF(STEP.LT.0.99D0) GOTO 120
      ISTEP=STEP+EPSI
      IF(DABS(STEP-ISTEP).LT.EPSI) GOTO 125
  120 IF(RANGE.GE.RNGMX) GOTO 125
      RANGE=RANGE*1D1
      STEP=STEP*1D1
      IX=IX-1
      IF(STEP.LT.5D2) GOTO 110
C           SET UP EXPONENT FOR PLOT AND CORRECT SIGN OF STEP
  125 EPSTEP=0.5D0
      NDEC=-1
      IF(IX.LT.0 .AND. IX.GT.-4) THEN
         NDEC=-IX
         STEP=STEP/1D1**NDEC
         EPSTEP=0.5D0/1D1**NDEC
         IX=0
      ENDIF
      EX=IX
      STEP=DSIGN(STEP,DX)
      COORD=XSTRT/1D1**IX+TICK0*STEP
C
C           GET OFFSETS FOR LABELS, TITLES
      DXB=TICK0*SPACE
      IF(LOGAX) THEN
         IF(N.LT.0) THEN
            DXB=DXB+0.4*WID
            DYB=-0.20*SPL
            DX10=-2.02*WID
            DY10=-0.275*SPL-DYB
         ELSE
            DXB=DXB+0.15*WID
            DYB=0.175*SPL
            DX10=-2.02*WID
            DY10=0.10*SPL-DYB
         ENDIF
      ELSE
         DXB=DXB-WID
         IF(XSTRT.LT.0D0) DXB=DXB-WID*0.5
         DYB=(-0.07+SIGN(0.19,A))*SPL
      ENDIF
      XN=X+DXB*CTHT-DYB*STHT
      YN=Y+DYB*CTHT+DXB*STHT
      NVAR=NABS
      N7=NABS
      IF(IX.NE.0) N7=NABS+7
      DYC=(-0.084+SIGN(0.488,A))*SPL
      DXC=(SIZE-WIDL*N7)/2.0
      NT=NTICK/2
      IF(IX.EQ.0) GOTO 160
      EXPLAB=' (10  )'
      NEXP=7
      IF(NABS.GT.5 .AND. BCD(NABS:NABS).EQ.')') THEN
         DO NBCD=NABS-1,MAX0(3,NABS-12),-1
            IF(BCD(NBCD:NBCD).EQ.')') GOTO 150
            IF(BCD(NBCD:NBCD).EQ.'(') THEN
               IF(BCD(NBCD-1:NBCD-1).NE.' ') GOTO 150
               EXPLAB(7:)=' '//BCD(NBCD+1:NABS)
               NEXP=7+(NABS-NBCD)
               NVAR=NBCD-2
               GOTO 150
            ENDIF
         END DO
      ENDIF
  150 OFFN=WIDL*NVAR
      OFFNX=4.0*WIDL
      OFFNY=0.5*HGTL
      IF(LOCALE.NE.2) GOTO 160
C           SPECIAL CODE FOR PRINTER PLOT TITLES
      OFFNY=0.0
      EXPLAB(4:4)='E'
      IF(THETA.NE.90.) GOTO 160
      OFFN=-NEXP*WID
      OFFNX=    WID
      DXC=DXC-OFFN
C
C           WRITE LABELS (AND TITLE)
  160 NTK1=NTICK+1
      DO 200 I=1,NTK1
      CALL NUMBER(XN,YN,HGTX,SNGL(COORD),THETA,NDEC)
      IF(PLTRTC.NE.0.) RETURN
      IF(LOGAX) THEN
         CALL NUMBER(XN+DX10*CTHT-DY10*STHT,
     .    YN+DY10*CTHT+DX10*STHT,HGT,10.,THETA,-1)
         IF(PLTRTC.NE.0.) RETURN
      ENDIF
      PRVCRD=COORD+EPSTEP
      COORD=COORD+STEP
      IF(PRVCRD.LT.0D0 .AND. COORD+EPSTEP.GT.0D0) THEN
         XN=XN+0.5*WID*CTHT
         YN=YN+0.5*WID*STHT
      ENDIF
      XN =XN+DXT
      YN =YN+DYT
      IF(NT.NE.0) GOTO 200
C           WRITE TITLE
      XT=X+DXC*CTHT-DYC*STHT
      YT=Y+DYC*CTHT+DXC*STHT
      CALL SYMBOL(XT,YT,HGTL,BCD,THETA,NVAR)
      IF(PLTRTC.NE.0.) RETURN
      IF(IX.EQ.0) GOTO 200
      XT=XT+OFFN*CTHT
      YT=YT+OFFN*STHT
      CALL SYMBOL(XT,YT,HGTL,EXPLAB,THETA,NEXP)
      IF(PLTRTC.NE.0.) RETURN
      XT=XT+OFFNX*CTHT-OFFNY*STHT
      YT=YT+OFFNX*STHT+OFFNY*CTHT
      CALL NUMBER(XT,YT,HGT,EX,THETA,-1)
      IF(PLTRTC.NE.0.) RETURN
  200 NT=NT-1
C           START AT END OF AXIS (SAVE DRAWING TIME)
  205 XN=X+CTHT*SIZE
      YN=Y+STHT*SIZE
      IF(NTICK.EQ.0 .AND. .NOT.LOGAX) GOTO 300
C           SIZE OF TICK MARKS
      TM=SIGN(HGT,A)*0.6
      DXM=-TM*STHT
      DYM= TM*CTHT
C           DRAW AXIS WITH TICK MARKS
      TICKN=TICK0+NTICK
      IF(ABS(TICKN-TICK).LE.0.01) GOTO 207
      CALL PLOT(XN,YN,3)
      IF(PLTRTC.NE.0.) RETURN
      XN=X+CTHT*TICKN*SPACE
      YN=Y+STHT*TICKN*SPACE
      IF(LOGAX .AND. LOGSUB) THEN
         DO IDL=2,9
            IF(TICKN+LD(IDL).GE.TICK) GOTO 206
         END DO
         IDL=10
  206    DO ID=IDL-1,2,-1
            XT=XN+LD(ID)*DXT
            YT=YN+LD(ID)*DYT
            CALL PLOT(XT,YT,2)
            IF(PLTRTC.NE.0.) RETURN
            CALL PLOT(XT+DXM*TL(ID),YT+DYM*TL(ID),3)
            IF(PLTRTC.NE.0.) RETURN
            CALL PLOT(XT,YT,2)
            IF(PLTRTC.NE.0.) RETURN
         END DO
      ENDIF
      CALL PLOT(XN,YN,2)
      IF(PLTRTC.NE.0.) RETURN
  207 DO 210 I=1,NTICK
      CALL PLOT(XN+DXM,YN+DYM,3)
      IF(PLTRTC.NE.0.) RETURN
      CALL PLOT(XN,YN,2)
      IF(PLTRTC.NE.0.) RETURN
      IF(LOGAX .AND. LOGSUB) THEN
         DO ID=9,2,-1
            XT=XN+(LD(ID)-1.)*DXT
            YT=YN+(LD(ID)-1.)*DYT
            CALL PLOT(XT,YT,2)
            IF(PLTRTC.NE.0.) RETURN
            CALL PLOT(XT+DXM*TL(ID),YT+DYM*TL(ID),3)
            IF(PLTRTC.NE.0.) RETURN
            CALL PLOT(XT,YT,2)
            IF(PLTRTC.NE.0.) RETURN
         END DO
      ENDIF
      IF(I.GE.NTICK .AND. TICK0.EQ.0.) THEN
         XN=X
         YN=Y
      ELSE
         XN=XN-DXT
         YN=YN-DYT
      ENDIF
  210 CALL PLOT(XN,YN,2)
      IF(PLTRTC.NE.0.) RETURN
C           ONE LAST TICK AT TICK0
      CALL PLOT(XN+DXM,YN+DYM,2)
      IF(PLTRTC.NE.0.) RETURN
      IF(TICK0.EQ.0.) RETURN
      IF(LOGAX .AND. LOGSUB) THEN
         ID=9
         DO WHILE (ID.GE.2 .AND. LD(ID)-1.+TICK0.GT.0.)
            XT=XN+(LD(ID)-1.)*DXT
            YT=YN+(LD(ID)-1.)*DYT
            CALL PLOT(XT+DXM*TL(ID),YT+DYM*TL(ID),3)
            IF(PLTRTC.NE.0.) RETURN
            CALL PLOT(XT,YT,2)
            IF(PLTRTC.NE.0.) RETURN
            ID=ID-1
         END DO
      ENDIF
C
  300 CALL PLOT(XN,YN,3)
      IF(PLTRTC.NE.0.) RETURN
      CALL PLOT(X,Y,2)
      RETURN
      END
