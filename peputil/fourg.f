      SUBROUTINE FOURG(DATA,N,ISIGN,WORK)
C     FAST FOURIER TRANSFORM FOR AN ARBITRARY NUMBER OF DATA.
C     THE TRANSFORM DONE IS--
C     TRAN(J) = SUM(DATA(K)*EXP(ISIGN*2*PI*I*(J-1)*(K-1)/N))/SQRT(N),
C     SUMMED OVER K = 1 TO N AND FOR ALL J = 1 TO N.  ISIGN IS +1 OR -1,
C     DENOTING THE FORWARD OR REVERSE TRANSFORM.  THE TRANSFORM VALUES
C     ARE RETURNED IN ARRAY DATA, REPLACING THE INPUT.  WORK IS A WORK
C     ARRAY THE SAME SIZE AS DATA, N COMPLEX ELEMENTS.
C     *** RUNNING TIME IS PROPORTIONAL TO N * (SUM OF THE PRIME FACTORS
C     OF N), AS COMPARED TO THE N**2 PROPORTIONALITY OF NON-FAST
C     FOURIER TRANSFORM PROGRAMS.
C     *** THIS IS A PEDAGOGICAL PROGRAM.  IT CAN BE SPEEDED UP BY A
C     FACTOR OF TWO BY CHECKING FOR FACTORS OF TWO AND THREE AND BY
C     COMPUTING W BY RECURSION OR BY TABLING IT.  PROGRAM FOUR1 IS BOTH
C     FASTER THAN FOURG AND NEEDS NO WORK ARRAY.  HOWEVER, N MUST BE A
C     POWER OF TWO TO USE IT.  SEE ALSO PROGRAMS FOUR2, FOURT, ETC.
C     *** NORMAN BRENNER, IBM RESEARCH AND MIT, 7/71.
C
C         PARAMETERS
      REAL*4  DATA(1), WORK(1)
      INTEGER*4  N, ISIGN
C
C         COMMON
      include 'inodtabc.inc'
C
      IF(N.LE.0) THEN
         WRITE (PRINT, 2) N
 2       FORMAT('0ERROR IN FOURG.  N = ',I6,' IS NON-POSITIVE.')
         RETURN
      ENDIF
      NREM=N
      IN=-1
      IDIV=2
      IGO=-1
      GO TO 40
 10   IDIV=1
      IGO=0
 20   IDIV=IDIV+2
      IF(IDIV*IDIV-NREM)40,40,30
 30   IDIV=NREM
      IGO=1
      IF(IDIV-1)120,120,40
 40   IF(MOD(NREM,IDIV))110,50,110
 50   NDONE=N/NREM
      NREM=NREM/IDIV
      ISTEP=2*NREM
      DO 100 I3=1,NDONE
      DO 100 I2=1,IDIV
      THETA=SIGN(6.28318*FLOAT(NREM*(I3-1+NDONE*(I2-1)))/FLOAT(N),
     1  FLOAT(ISIGN))
      WR=COS(THETA)
      WI=SIN(THETA)
      DO 100 I1=1,NREM
      I231=2*(((I2-1)*NDONE+I3-1)*NREM+I1-1)+1
      I321=2*((I3*IDIV-1)*NREM+I1-1)+1
      IF(IN)60,60,80
 60   WORK(I231)=DATA(I321)
      WORK(I231+1)=DATA(I321+1)
      DO 70 J2=2,IDIV
      I321=I321-ISTEP
      TEMP=WORK(I231)
      WORK(I231)=TEMP*WR-WORK(I231+1)*WI+DATA(I321)
 70   WORK(I231+1)=TEMP*WI+WORK(I231+1)*WR+DATA(I321+1)
      GO TO 100
 80   DATA(I231)=WORK(I321)
      DATA(I231+1)=WORK(I321+1)
      DO 90 J2=2,IDIV
      I321=I321-ISTEP
      TEMP=DATA(I231)
      DATA(I231)=TEMP*WR-DATA(I231+1)*WI+WORK(I321)
 90   DATA(I231+1)=TEMP*WI+DATA(I231+1)*WR+WORK(I321+1)
 100  CONTINUE
      IN=-IN
      GO TO 40
 110  IF(IGO)10,20,120
 120  S = SQRT(FLOAT(N))
      IMAX=2*N
      IF(IN)130,130,150
 130  DO 140 I=1,IMAX
 140  DATA(I)=DATA(I)/S
      RETURN
 150  DO 160 I=1,IMAX
 160  DATA(I)=WORK(I)/S
      RETURN
      END
