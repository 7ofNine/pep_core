      SUBROUTINE SELECT(DATA,DAT8)
C         READS OBSLIB TAPE AND FILLS DATA AND WEIGHTING ARRAY USING
C         TIME PARAMETERS TO DETERMINE OBSERVATIONS TO BE SELECTED
      IMPLICIT NONE
C
C        PARAMETERS
      REAL*4 DATA(9)
      REAL*8 DAT8(9)
C
C         COMMON
      include 'misc.inc'
      include 'span.inc'
C
C         LOCAL SPECIFICATIONS
      REAL*8 T,BI,MP,TIME
      REAL*4 DEPVAR,A,W,SIG
      INTEGER*4 IRC,IPT,ISERIE,IDAT,ITIM,IWGT,I,J,
     . KT,KW,N
      LOGICAL*4 BEGUN,STRTAB
C
C         STATEMENT FUNCTIONS FOR INDICES TO MASTER DATA ARRAY
C         DATA - INDEXING INTO 2 INTERLEAVED TIERS OF REAL*4
      include 'indices.inc'
C
C         TIME - INDEXING INTO ONE TIER OF REAL*8
      KT(ISPAN,IPOINT)= (NSPAN+ISPAN-1)*(NPOINT+2)+IPOINT
C
C         WEIGHT - INDEXING INTO FIFTH TIER OF REAL*4
      KW(ISPAN,IPOINT)= (4*NSPAN+ISPAN-1)*(NPOINT+2)+IPOINT
C
C         INITIALIZE
      ISERIE = 1
      ISPAN = 1
      IPT = 1
      IDAT= KD(1, 1)
      ITIM= KT(1, 1)
      IWGT= KW(1, 1)
      BEGUN=.FALSE.
      STRTAB=.FALSE.
      IF(STRTVL(1).NE.0.D0) STRTAB = .TRUE.
      IF(STRTAB) START = STRTVL(1)
      N = NPOINT
      IF(PADZ) N = NPOINT/2
      DO I=1,NSPAN
         NPTSPN(I)=0
      END DO
C
C         READ OBSLIB TYPE 1 AND 2 RECORDS
    9 CALL RDLIB(1,IRC,T,A,TIME,SIG)
      IF(IRC.EQ.1) GOTO 181
      CALL RDLIB(2,IRC,T,A,TIME,SIG)
C
C         READ A SERIES HEADER (TYPE 3)
   10 CALL RDLIB(3,IRC,T,A,TIME,SIG)
C
      IF(IRC .EQ. 1) GOTO 9
C
C         READ DATA RECORD (TYPE 4)
   20 CALL RDLIB(4,IRC,T,DEPVAR,TIME,SIG)
C
      IF(IRC .EQ. 1) GOTO 9
C
C         IF END OF SERIES GO INCREMENT SERIES COUNTER
      IF(IRC .EQ. 2) GOTO 160
C
C         IF TIME BEFORE START, GO READ ANOTHER RECORD
  100 IF(T .LT. START) GOTO 20
C
C         IF TIME AFTER STOP, GO READ REST OF SERIES
      IF(T .GT. STOP) GOTO 20
C
C         TIME IS WITHIN START AND STOP BOUNDS
C         SEE IF STARTING NEW SPAN
      IF(BEGUN) GOTO 120
      BEGUN = .TRUE.
C
C         SEE IF FIRST SERIES
      IF(ISERIE .GT. 1) GOTO 110
C
C         SEE IF SPAN STARTS COME FROM TABLE
      IF(STRTAB) GOTO 110
C
C         ASSIGN CURRENT TIME AS SPAN START (SAVE IN TABLE FOR LATER SR)
      STRTVL(ISPAN) = T
C
C         ASSIGN BEGINNING OF FIRST INTERVAL TO TABLE START VALUE
  110 BI = STRTVL(ISPAN)
      MP = BI + DELTA/2.0
C
C         SEE IF CURRENT TIME BEYOND THIS INTERVAL
  120 IF(T .GT. (BI + DELTA)) GOTO 140
C
C COUNT DATA POINTS ACCEPTED, EVEN IF SUPPRESSED BY FILTER
      NPTSPN(ISPAN)=NPTSPN(ISPAN)+1
C
C         GET WEIGHT FOR THIS TIME
      W = 1.0
C
C         NEAREST PT FILTER LOGIC SEPARATED HERE FOR DETERMINING DATA
C         TO BE SELECTED
      IF(FILTER.LT.2) THEN
C
C     TEST CURRENT TIME AGAINST ANY PREVIOUS TIME FOR CLOSENESS TO
C     MIDPOINT.  IF NOT CLOSER GO READ ANOTHER RECORD
         IF(ABS(DAT8(ITIM) - MP) .LE. ABS(T - MP)) GOTO 20
C
C     STORE CURRENT VALUES AS NEAREST
         DATA(IDAT) = DEPVAR
         DATA(IWGT) = W
         DAT8(ITIM) = T
C
C         GO READ ANOTHER RECORD
         GOTO 20
      ELSE
C
C     STORE (DATA VALUE * WEIGHT) AND WEIGHT FOR AVERAGING FILTERS
         DATA(IDAT) = DATA(IDAT) + DEPVAR*W
         DATA(IWGT) = DATA(IWGT) + W
         DAT8(ITIM) = MP
C
C         GO READ ANOTHER RECORD
         GOTO 20
      ENDIF
C
C         INCREMENT POINT COUNTER
140   IPT = IPT + 1
C
C         IF SPAN COMPLETED GO REINITIALIZE
      IF(IPT .GT. N) GOTO 150
C
C         INCREMENT INTERVAL
      IDAT= IDAT+ 2
      IWGT= IWGT+ 1
      ITIM= ITIM+ 1
      BI = BI + DELTA
      MP = MP + DELTA
C
C         GO BACK TO CHECK IF CURRENT TIME NOW IN ITNERVAL
      GOTO 120
C
C         INCREMENT SPAN COUNTER
  150 ISPAN = ISPAN + 1
C
C         IF GOT ALL SPANS THEN GO FOR ANOTHER SERIES
      IF(ISPAN .GT. NSPAN) GOTO 160
C
C         REINITIALIZE FOR NEW SPAN
      IPT = 1
      IDAT= KD(ISPAN, 1)
      ITIM= KT(ISPAN, 1)
      IWGT= KW(ISPAN, 1)
      BEGUN = .FALSE.
      IF(STRTAB) START = STRTVL(ISPAN)
C
C         PROCESS CURRENT TIME AS FIRST IN NEW SPAN
      GOTO 100
C
C         INCREMENT SERIES COUNTER
  160 ISERIE = ISERIE + 1
C
C         IF GOT ALL SERIES THEN GO WRAP UP
      IF(ISERIE .GT. NSERIE) GOTO 180
C
C         REINITIALIZE FOR NEW SERIES
      ISPAN = 1
      IPT = 1
      IDAT= KD(1, 1)
      ITIM= KT(1, 1)
      IWGT= KW(1, 1)
      STRTAB = .TRUE.
      START = STRTVL(1)
      BEGUN = .FALSE.
      IF(IRC .EQ. 2) GOTO 10
C
C         READ TO NEXT SERIES HEADER
  170 CALL RDLIB(4,IRC,T,DEPVAR,TIME,SIG)
C
      IF(IRC .EQ. 1) GOTO 9
C
C         IF END OF SERIES GO READ NEW SERIES
      IF(IRC .EQ. 2) GOTO 10
      GOTO 170
C
C         ALL SERIES PROCESSED.  FOR AVERAGING FILTERS, DIVIDE THRU BY
C         WEIGHTS
  180 CALL RDLIB(0,IRC,T,DEPVAR,TIME,SIG)
  181 CONTINUE
      DO I = 1,NSPAN
         IDAT= KD(I, 1)
         IWGT= KW(I, 1)
         ITIM= KT(I, 1)
         MP = STRTVL(I) + DELTA/2.0
         DO J = 1, N
            IF(DATA(IWGT).EQ.0.) DAT8(ITIM)=MP
            IF(FILTER.EQ.2 .AND. DATA(IWGT).NE.0.0)
     1       DATA(IDAT) = DATA(IDAT)/DATA(IWGT)
            IDAT= IDAT+ 2
            IWGT= IWGT+ 1
            ITIM= ITIM+ 1
            MP = MP + DELTA
         END DO
      END DO
      RETURN
      END
