      SUBROUTINE RDLIB(TYPE, RC, INDEP, DEP, TIME, SIGMA)
C         READS OBSLIB TAPE RECORD TYPE TYPE, PRINTING AS DESIRED.
C         FOR TYPE 4 RECORDS, INDEP IS JD.FRAC (SAME AS TIME) IF NIV=0,
C         OR SELECTED BY NON-ZERO NIV - THE SAME AS DEP
C         RETURNS OBSERVABLE, RESIDUAL, OR A PARTIAL AS SELECTED BY NDV,
C         AND THE UNCERTAINTY OF THE SELECTED OBSERVABLE
C         RC = 1 MEANS   NO MORE TAPES (TYPE 1)
C                        END OF FILE (END OF TAPE) (TYPES 3 & 4)
C         RC = 2 MEANS   END OF SERIES (TYPE 4)
C         RC = 0 MEANS OK
C
      IMPLICIT NONE

      include 'pepglob.inc'
C
C         PARAMETERS
      INTEGER*4  TYPE, RC
      REAL*4 DEP,SIGMA
      REAL*8 INDEP, TIME
C
C         COMMON
      include 'checks.inc'
      include 'graphs.inc'
      include 'inodtabc.inc'
      include 'misc.inc'
      include 'namen.inc'
      include 'skip.inc'
      include 'span.inc'
      include 't1a.inc'
      include 't2a.inc'
      include 't3a.inc'
      CHARACTER*4 SMID, EMID/'EMID'/, OMID/'OMID'/
      EQUIVALENCE (SITA,SMID)
      include 't4a.inc'
      INTEGER*2 ILDT(6)
      EQUIVALENCE (ILDT1A,ILDT(1))
C
C         LOCAL
      REAL*8 DELMIN,INDSAV
      INTEGER*4 I,IHSUB,IHX,IQ,IQD,JQ,JQD,KBAD,N,NCUT,NKOD,NOUT,NPDT,
     1 NPT,NPTS,NWARN,N12(2),OBSIN,ORC,PRC
      REAL*4 TMP
      REAL*8 GAUSSIAN
      CHARACTER*8 OBSERR(3)/' EOF',' ERROR',' XXTYP'/
      CHARACTER*8 H(6)/'EPOCH','OBSERV','O - C','DERIV(',' SAVE(',
     1 '  CAL('/
      CHARACTER*4 QCUT(3)/'** ','   ','OUT'/, CZERO
      INTEGER*4 IZERO/0/
      EQUIVALENCE (CZERO,IZERO)
      LOGICAL*4  PRNT
      CHARACTER*8 OBSNS(14) /'DELAY','DOPPLER', 'RT.ASC.','DECLIN',
     1 'CONTCT1','CONTCT2', 'DELAY','DEL.RATE', 'AZIMUTH','ELEVATN',
     2 'MID-TIME','SEP.', 'PHASE',' '/
      CHARACTER*8 UNITS(15) /  '(s)','(Hz)',         '(h)','(deg)',
     1     '(s)','(s)',       '(s)','(s/s)',      '(deg)','(deg)', 
     .      '(s)',' ',        '(cyc)',' ',   '(arcsec)'/
      INTEGER*4  LUNITS(15) /    3,    4,              3,    5,
     .       3,    3,           3,    5,            5,      5,
     .        3,   0,           5,     0,       8/
      CHARACTER*8  BLANK /'        '/
C
C        EXTERNAL
      LOGICAL*4 CHECKA
C
C         SET PRINT FOR TYPE 4 RECORDS
      PRNT = MOD(IPRINT, 2) .EQ. 1
C
C         SWITCH ON TYPE
      RC = 0
      GOTO (1000,2000,3020,4000), TYPE
C
C                 ::::::::::::::::::::::::
C*  START=1000
C         TYPE 1
 1000 TAPENO = TAPENO + 1
      IF(TAPENO.GT.1) THEN
         CALL OBSIO(OBSIN,OBSOUT,0,0,ORC)
         OBSOUT=0
      ENDIF
      OBSIN=OBSLIB(TAPENO)
      IF(TYPE.LE.0.OR.TAPENO.GT.10.OR.OBSIN.LE.0) GOTO 1030
      CALL OBSIO(OBSIN,OBSOUT,1,0,ORC)      
      IF(ORC.LT.1) GOTO 9080
C
      WRITE (PRINT,1020) R1A
 1020 FORMAT('1*** INPUT SECTION ***' / '- OBSLIB TITLE = ',11A8)
      IF(IPLOT.GE.1) CALL TITEL(R1A,88, 0.1, 1.0)
      RETURN
C
C           RESET FOR NEXT OPERATION
 1030 TAPENO=0
      RC=1
      RETURN
C
C                 ::::::::::::::::::::::::
C*  START=2000
C         TYPE 2
 2000 CALL OBSIO(OBSIN,OBSOUT,2,-1,ORC)
      IF(ORC.LT.1) GOTO 9080
      IF(OBSOUT.GT.0.AND.NOPART) CALL ZERPAR(2)
      CALL OBSIO(OBSIN,OBSOUT,2,1,ORC)
      IF(LNKLVA.NE.CZERO) WRITE(PRINT,2010) LNKLVA
 2010 FORMAT('0 PEP LEVEL = ',A4)
      RETURN
C
C                 ::::::::::::::::::::::::
C*  START=3000
C         TYPE 3
 3000 READ(OBSIN) NCODEA
C         SPACE UP OBSIN TO NEXT TYPE 3
 3010 READ(OBSIN,ERR=3000,END=9100) NCODEA
      IF(NCODEA.GT.0) GOTO 3010
C         READ NEXT TYPE 3 RECORD
 3020 IF(ORC.LT.0) GOTO 9080
      CALL OBSIO(OBSIN,OBSOUT,3,-1,ORC)
      IF(ORC)9080,3040,3030
 3030 IF(OBSOUT.GT.0.AND.NOPART) CALL ZERPAR(3)
      IF(.NOT.CHECKA(NDV)) GOTO 3010
 3040 CALL OBSIO(OBSIN,OBSOUT,3,1,PRC)
      IF(ORC.LT.1) GOTO 9080
      N = 0
      NPTS=-NTHBEG
      INDSAV = 0.0D0
      NCUT= 0
      NOUT= 0
      N12(1)=0
      N12(2)=0
      NWARN=0
C           ESTABLISH OBSERVABLE NAMES
      NKOD=NCODFA
      IF(NKOD.GT.20) NKOD=NKOD-20
      JTYPE=(NKOD-1)/3*2
      IF(NKOD.GT.12) JTYPE=0
      IF(NKOD.EQ.20) JTYPE=8
      IF(NKOD.EQ.18) JTYPE=12
      IF(NKOD.EQ.4 .AND. (NCENTA.EQ.3.OR.NCENTA.EQ.10)) JTYPE=8
      IF(NKOD.EQ.9 .AND. (SMID.EQ.EMID.OR.SMID.EQ.OMID)) JTYPE=10
      I=1
      IF(NCODE.EQ.3) I=2
      OBSNM=OBSNS(I+JTYPE)
      OBSUN=UNITS(I+JTYPE)
      OBSLU=LUNITS(I+JTYPE)
      IF(TWOOBS) THEN
         OBSNM1=OBSNS(1+JTYPE)
         OBSUN1=UNITS(1+JTYPE)
         OBSLU1=LUNITS(1+JTYPE)
      ELSE
         OBSNM1=OBSNM
         OBSUN1=OBSUN
         OBSLU1=OBSLU
      ENDIF
      IF(NDV.EQ.2 .AND. (JTYPE.EQ.2.OR.JTYPE.EQ.8)) THEN
         OBSUN=UNITS(15)
         OBSLU=LUNITS(15)
      ENDIF
      IF(NIV.EQ.2 .AND. (JTYPE.EQ.2.OR.JTYPE.EQ.8)) THEN
         OBSUN1=UNITS(15)
         OBSLU1=LUNITS(15)
      ENDIF
C           PRINT SERIES HEADER
      WRITE(PRINT,3050) NSEQA,SERA,SITA,RITA,NPLNTA,PNAMA,
     1 NCENTA,SPOTA,NPLN2A,SPOT2A,NCODFA,CTLGA
 3050 FORMAT('-SERIES HEADER' / ' SEQ NO NAME SENDSITE RECVSITE  NPLNT',
     1 '     NCENT SPOT NPLNT2 SPOT2 NCODF  CTLG'/ I7,1X,A4,2(1X,A8),I3,
     2 1X,A8,I4,2X,A4,I6,2X,A4,I5,3X,A8)
      IF(NAMES) WRITE(PRINT,3060) NUMPAR,
     1   (I,NOMBRE(1,I),NOMBRE(2,I),I=1,NUMPAR)
 3060 FORMAT('0     PARAMETER NAMES (NUMPAR=',I3,')',
     1 T111,I4,2(1X,A8)/ 6(I4,2(1X,A8)) )
      IF (.NOT. PRNT) RETURN
      IHSUB=IABS(NDV)
      IHX=5
      IF(NDV.LT.0) GOTO 3085
      IF (NDV .GE. 3) GO TO 3080
      IHX=NDV+1
      WRITE(PRINT,3070) H(IHX)
 3070 FORMAT('0NCODE   JD       HR  MIN  SEC      ERROR',4X,A8,1X,A8)
      RETURN
 3080 IF (FNAME .NE. BLANK) GO TO 3100
      IHX=4
      IF(NDV.LE.1000) GOTO 3085
      IHX=6
      IHSUB=NDV-1000
 3085 WRITE(PRINT,3090) H(IHX),IHSUB
 3090 FORMAT('0NCODE   JD       HR  MIN  SEC      ERROR',4X,A6,I3,')')
      RETURN
 3100 WRITE (PRINT,3070) FNAME, LNAME
      RETURN
C
C                 ::::::::::::::::::::::::
C*  START=4000
C         TYPE 4
 4000 CALL OBSIO(OBSIN,OBSOUT,4,-1,ORC)
      KBAD=1
      IF(ORC.EQ.-1) GOTO 9000
      IF(ORC)9080,4500,4010
 4010 IF(NCODEA.GT.3) NCODEA=NCODEA-3
      IF(NCODE.NE.2.AND.NCODEA.NE.2.AND.NCODE.NE.NCODEA) GOTO 4000
      TIME=DFLOAT(JDSA)+((IHRA*60+IMINA)*60+SECA)/864D2
      IF(TIME.LT.START .OR. TIME.GT.STOP) GOTO 4000
C          IF NIV=-1, CHECK LATITUDE AGAINST TLAT
      IF(NIV.EQ.-1 .AND. (SAVA(2).LT.TLAT(1).OR.SAVA(2).GT.TLAT(2)))
     1  GOTO 4000
      IF(NTH.LE.0) GOTO 4030
C          ACCEPT ONLY EVERY NTH POINT OR
C             DTMIN - TIME INTERVAL TO SKIP BEFORE CONSIDERING
C                     ANOTHER POINT
C             DTMAX - DO NOT SKIP IF TIME INTERVAL FROM
C                     LAST POINT EXCEEDS DTMAX
C
      NPTS=NPTS+1
      IF(NPTS.EQ.0) GOTO 4020
      IF(NPTS.LT.0) GOTO 4000
C          COMPUTE DELTA TIME IN MINUTES
      DELMIN = DABS(TIME-INDSAV)*1440D0
      IF(DELMIN.GT.DTMAX) GOTO 4020
      IF(NPTS.LT.NTH) GOTO 4000
      IF(DELMIN.LT.DTMIN) GOTO 4000
C          ACCEPT OBSERVATION
 4020 NPTS=0
      INDSAV=TIME
 4030 IF(TWOOBS.AND.NCODEA.NE.2) GOTO 4000
      IF(OBSOUT.GT.0.AND.NOPART) CALL ZERPAR(4)
      IQ=1
      JQ=1
      IQD=2
      JQD=2
      IF(TWOOBS) GOTO 4035
      IF(NCODEA.EQ.3.OR.NCODE.EQ.3) JQ=2
      IF(NUM1A.GT.1) IQ=JQ
      IQD=IQ
      JQD=JQ
 4035 CONTINUE
      IF(NIV.EQ.0) THEN
         INDEP=TIME
      ELSE
         IF(NIV.LT.0) THEN
            INDEP=SAVA(IABS(NIV))
         ELSE IF(NIV.EQ.1) THEN
            INDEP=RESLTA(JQ)
         ELSE IF(NIV.LE.1000) THEN
            INDEP=DERIVA(NIV,IQ)
         ELSE
            INDEP=CALA(NIV-1000)
         ENDIF
C          CHECK RANGE OF INDEPENDENT VARIABLE IF NOT TIME
         IF(INDEP.LT.MINIV .OR. INDEP.GT.MAXIV) GOTO 4000
      ENDIF
C        CHECK FOR PERIODIC BOUNDARY CONDITIONS
      IF(PERIV(1).GT.0D0) THEN
         INDEP=DMOD(INDEP-PERIV(2),PERIV(1))+PERIV(2)
         IF(INDEP.LT.PERIV(2)) INDEP=INDEP+PERIV(1)
      ENDIF
      KBAD=2
      N = N + 1
      IF(NUMPAR.LT.0) GOTO 4110
C           COUNT DT PARTIALS ON THIS RECORD
      NPT=NUMPAR+2
      NPDT=0
      IF(KTOTDT.LE.0) GOTO 4090
      DO 4080 I=1,6
 4080 IF(ILDT(I).GT.0) NPDT=NPDT+1
      NPT=NPT+NPDT-KTOTDT
 4090 IF(NDV.GT.KLDT) NDV=NDV0+NPDT
      IF(NPT.EQ.NUMPRA) GOTO 4110
      NWARN=NWARN+1
      IF(NWARN.LE.2) WRITE(PRINT,4100) NPT,NUMPRA
 4100 FORMAT (1X, '::: NPAR=', I4, ' NOT EQUAL NUMPAR=', I4)
 4110 CONTINUE
      IF(NDV.EQ.0) THEN
         DEP=TIME
      ELSE IF(NDV.LT.0) THEN
         DEP=SAVA(IABS(NDV))
C            CHANGE S-BAND FREQ TO OFFSET FROM NOMINAL TO ALLOW R*4
         IF(NDV.EQ.-6) DEP=SAVA(6)-SAVA(29)
         IF(NDV.EQ.-7) DEP=SAVA(7)-FREQ2A
      ELSE IF(NDV.EQ.1) THEN
         DEP=RESLTA(JQD)
      ELSE IF(NDV.LE.1000) THEN
         DEP=DERIVA(NDV,IQD)
      ELSE
         DEP=CALA(NDV-1000)
      ENDIF
      IF(NDV.NE.2) GOTO 4140
C          DETERMINE IF O-C IS TO BE CUT
      IF(CUT(JQD).EQ.0.) GOTO 4140
      IF(ABS(DEP).LT.ABS(CUT(JQD)*DERIVA(1,IQD))) GOTO 4140
      NCUT = NCUT + 1
      IF(.NOT.PRNT) GOTO 4000
      KBAD=1
      GOTO 4510
C        CHECK FOR PERIODIC BOUNDARY CONDITIONS
 4140 CONTINUE
      IF(PERDV(1).GT.0D0) THEN
         DEP=DMOD(DEP-PERDV(2),PERDV(1))+PERDV(2)
         IF(DEP.LT.PERDV(2)) DEP=DEP+PERDV(1)
      ENDIF
C        REPLACE VALUE WITH RANDOM NUMBER, IF DESIRED
      IF(NDV.EQ.2 .AND. RNDMDT) DEP=DERIVA(1,IQD)*GAUSSIAN(ISEED)
C
C           SCALE VARIABLES BY OBSERVATION ERROR, IF APPROPRIATE
      IF(NORMDV.AND.NDV.GT.0.AND.NDV.LE.1000) DEP=DEP/
     1 MAX(DERIVA(1,IQD),1E-50_10)
      IF(NORMIV.AND.NIV.GT.0.AND.NIV.LE.1000) INDEP=INDEP/
     1 MAX(DERIVA(1,IQ),1E-50_10)
      SIGMA=DERIVA(1,IQ)
C           CONVERT RA,DEC OBSERVABLES TO HR,DEG
      IF(NIV.EQ.1.AND.JTYPE.EQ.2) INDEP=INDEP/3600.
      IF(NDV.EQ.1.AND.JTYPE.EQ.2) DEP=DEP/3600.
C           CONVERT RA OR AZ TO ARC LENGTH
      IF(NDV.LE.1.OR.NDV.GT.1000 .OR. NCODEA.EQ.3.OR.NCODE.EQ.3 .OR.
     1 (JTYPE.NE.2.AND.JTYPE.NE.8) .OR. NCODFA.GT.20) GOTO 4145
      IF(JTYPE.EQ.2) DEP=DEP*15.
      IF(NCODEA.LT.2) GOTO 4145
      TMP=RESLTA(2)
      IF(JTYPE.EQ.2) TMP=TMP/3600.
      DEP=DEP*COS(TMP*0.0174532925)
 4145 IF(.NOT.ONEAXE.OR..NOT.OUTIN) GOTO 4500
C          CHECK FOR DEP OUTSIDE PLOTTING RANGE
C          IF SO, PUT AT BOUNDARY
      IF(DEP.GE.EXTRMY(1)) GOTO 4150
      DEP= EXTRMY(1)
      GOTO 4160
 4150 IF(DEP.LE.EXTRMY(2)) GOTO 4500
      DEP= EXTRMY(2)
 4160 NOUT= NOUT + 1
      KBAD=3
C*  START=4500
 4500 CONTINUE
      CALL OBSIO(OBSIN,OBSOUT,4,1,PRC)
 4510 IF(ORC.EQ.0) GOTO 9000
      IF(KBAD.EQ.2) N12(JQD)=N12(JQD)+1
      IF(PRNT) WRITE(PRINT,4520) NCODEA,JDSA,IHRA,IMINA,SECA,
     1 DERIVA(1,IQD),DEP,QCUT(KBAD)
 4520 FORMAT(I6,I10,I4,I5,0PF7.2,1PE11.1,E17.8,5X,A3)
      IF(MOD(IPRINT/16,2).EQ.1.AND.NUMPRA.GT.2)
     1 WRITE(PRINT,4530) (DERIVA(I,IQD),I=3,NUMPRA)
 4530 FORMAT(1P,5D25.15)
      IF(KBAD.EQ.1) GOTO 4000
      RETURN
C*  START=9000
 9000 N=N-NCUT
      WRITE (PRINT,9010) N
 9010 FORMAT (/I6, ' OBSERVATIONS INCLUDED FOR THIS SERIES')
      IF((CUT(1).NE.0.0).OR.(CUT(2).NE.0.0)) WRITE(PRINT,9020) NCUT
 9020 FORMAT(I6,' OBSERVATIONS CUT')
      IF(OUTIN) WRITE(PRINT,9030) NOUT
 9030 FORMAT(I6,' OBSERVATIONS OUT OF PLOT RANGE')
      IF(NWARN.GT.0) WRITE(PRINT,9035) NWARN
 9035 FORMAT(I6,' OBSERVATION RECORDS WITH WRONG NUMBER OF PARTIALS')
      IF(N12(1)*N12(2).NE.0) WRITE(PRINT,9060) (N12(I),OBSNS(I+JTYPE),
     1  I=1,2)
 9060 FORMAT('0* * * WARNING - OBSERVATIONS MIX ',I6,1X,A8,' AND',I6,
     1 1X,A8,' * * *')
      I=1
      IF(N12(2).GT.N12(1)) I=2
      OBSNM=OBSNS(I+JTYPE)
      OBSNM1=OBSNM
      IF(TWOOBS) OBSNM1=OBSNS(1+JTYPE)
      IF(.NOT.TWOOBS) WRITE(PRINT,9070) OBSNM
 9070 FORMAT(20X,A8,' OBSERVABLE')
      IF(TWOOBS) WRITE(PRINT,9075) OBSNM1,OBSNM
 9075 FORMAT(20X,A8,' AND ',A8,' OBSERVABLES')
      RC = 2
      RETURN
C
C         I/O ERROR
 9080 IF(ORC.LT.0) WRITE(PRINT,9090) OBSERR(-ORC),OBSIN,TYPE
 9090 FORMAT('0* *',A7,'ON OBSLIB=',I3,' READING TYPE',I2)
 9100 RC = 1
      RETURN
      END
