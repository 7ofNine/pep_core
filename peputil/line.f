      SUBROUTINE LINE(XARR,YARR,N,K,MARK,LSYMB)
      IMPLICIT NONE
C
C CALLING ARGUMENTS
      INTEGER*4 N,K,MARK,LSYMB
      REAL*4 XARR(K,*),YARR(K,*),SSIZE
      REAL*8 XARR8(K,*),YARR8(K,*)
C PLOT A SERIES OF POINTS WITH OR WITHOUT SYMBOLS OR LINES
C   XARR - ARRAY OF ABSCISSA VALUES. THE ADJUSTED MINIMUM AND
C          INCREMENT MUST FOLLOW THE DATA IN LOCATIONS
C          XARR(N*K+1) AND XARR(N*K+K+1), RESPECTIVELY.
C   XARR8- SAME, BUT DOUBLE PRECISION
C   YARR - ARRAY OF ORDINATE VALUES, SIMILAR TO XARR.
C   N -    NUMBER OF POINTS TO BE PLOTTED IN THE ARRAYS
C   K -    INCREMENT FOR PICKING COORDINATE VALUES FROM THE
C          XARR AND YARR ARRAYS (MAY BE THOUGHT OF AS THE
C          1ST DIMENSION OF A 2-DIMENSIONAL ARRAY).
C   MARK - CONTROL INTEGER INDICATING TYPE OF PLOTTING:
C          0 => CONNECT POINTS WITH LINE SEGMENTS
C          1 => CONNECT POINTS AND MARK WITH CENTERED SYMBOL
C          -1=> MARK POINTS WITH CENTERED SYMBOL
C   LSYMB- INTEGER INDEX INTO ARRAY OF CENTERED SYMBOLS
C
C COMMONS
      INCLUDE 'plttyp.inc'
C
C LOCAL VARIABLES
      INTEGER*4 I,INC,IPEN,NCHAR
      REAL*4 X,Y
      REAL*8 MIN4/2D-38/, X8,Y8
      LOGICAL DUBLP
C
      DUBLP=.FALSE.
      GOTO 10
C
      ENTRY LINE8(XARR8,YARR8,N,K,MARK,LSYMB)
      DUBLP=.TRUE.
C
   10 IPEN=3
      INC=MAX0(IABS(MARK),1)
      NCHAR=-1
      DO I=1,N,INC
         IF(DUBLP) THEN
            X8=(XARR8(1,I)-XARR8(1,N+1))/XARR8(1,N+2)
            IF(DABS(X8).GE.MIN4) THEN
               X=X8
            ELSE
               X=0.
            ENDIF
            Y8=(YARR8(1,I)-YARR8(1,N+1))/YARR8(1,N+2)
            IF(DABS(Y8).GE.MIN4) THEN
               Y=Y8
            ELSE
               Y=0.
            ENDIF
         ELSE
            X=(XARR(1,I)-XARR(1,N+1))/XARR(1,N+2)
            Y=(YARR(1,I)-YARR(1,N+1))/YARR(1,N+2)
         ENDIF
         IF(MARK.EQ.0) THEN
            CALL PLOT(X,Y,IPEN)
            IPEN=2
         ELSE
            CALL SYMBOL(X,Y,SYMHGT,LSYMB,0.,NCHAR)
            IF(MARK.GT.0) NCHAR=-2
         ENDIF
      END DO
      RETURN
      END
