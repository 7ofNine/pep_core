      SUBROUTINE FGEN(DATA,DAT8)
c FGEN - J.F.CHANDLER - 2005 SEP 20
      IMPLICIT NONE
C         READS OBSLIB TAPE, SELECTS (AND OPTIONALLY PRINTS) DATA,
C         AND TAKES DISCRETE FOURIER TRANSFORM
C
C        PARAMETERS
      REAL*4 DATA(9)
      REAL*8 DAT8(9)
C
C         COMMON
      include 'inodtabc.inc'
      include 'misc.inc'
      include 'pltlab.inc'
      include 'span.inc'
C
C         LOCAL SPECIFICATIONS
      CHARACTER*8 G/'JD.TIME '/
      REAL*8 T,BI,TIME,TMAX,EFFSPN,PERMAX
      REAL*4 DEPVAR,A,COUNT,WCOUNT,SIG,POWER,POWMAX,NRMPOW,PROB,MENSQ
      REAL*8 C1,C2,AVE,B11,B12,B22,DET,SQN
      INTEGER*4 IRC,ISERIE,I,J,N,IDAT,IMAT,IWGT,
     . KM,KW,NZERO,NPTTOT,MAXCHAN
      LOGICAL*4 BEGUN,STRTAB,BEGPRT
C
C         STATEMENT FUNCTIONS FOR INDICES TO MASTER DATA ARRAY
      include 'indices.inc'
C
C         MATRIX - 4 INTERLEAVED TIERS OF REAL*4
      KM(ISPAN,IPOINT)= (2*NSPAN+4*ISPAN-4)*(NPOINT+2)+4*IPOINT-3
C
C         WEIGHT - ONE TIER OF REAL*4
      KW(ISPAN,IPOINT)= (6*NSPAN+ISPAN-1)*(NPOINT+2)+IPOINT
C
C         INITIALIZE
      ISERIE = 1
      ISPAN = 1
      IDAT=KD(1,1)
      IMAT=KM(1,1)
      BEGUN=.FALSE.
      BEGPRT=.FALSE.
      STRTAB=.FALSE.
      IF(STRTVL(1).NE.0.0D0) STRTAB = .TRUE.
      IF(STRTAB) START = STRTVL(1)
      IF(PADZ) THEN
         EFFSPN=2D0*SIZSPN
         N = NPOINT/2
      ELSE
         EFFSPN=SIZSPN
         N = NPOINT
      ENDIF
      DO I=1,NSPAN
         NPTSPN(I)=0
      END DO
C
C         READ OBSLIB TYPE 1 AND 2 RECORDS
    9 CALL RDLIB(1,IRC,T,A,TIME,SIG)
      IF(IRC.EQ.1) GOTO 180
      CALL RDLIB(2,IRC,T,A,TIME,SIG)
C
C         READ A SERIES HEADER (TYPE 3)
   10 CALL RDLIB(3,IRC,T,A,TIME,SIG)
C
      IF(IRC.EQ.1) GOTO 9
C
C         READ DATA RECORD (TYPE 4)
   20 CALL RDLIB(4,IRC,T,DEPVAR,TIME,SIG)
C
      IF(IRC.EQ.1) GOTO 9
C
C         IF END OF SERIES GO INCREMENT SERIES COUNTER
      IF(IRC.EQ.2) GOTO 160
C
C         IF TIME BEFORE START, GO READ ANOTHER RECORD
  100 IF(T .LT. START) GOTO 20
C
C         IF TIME AFTER STOP, GO READ REST OF SERIES
      IF(T .GT. STOP) GOTO 20
C
C         TIME IS WITHIN START AND STOP BOUNDS
C         SEE IF STARTING NEW SPAN
      IF(.NOT.BEGUN) THEN
         BEGUN = .TRUE.
C IF FIRST SERIES, FILL START TABLE UNLESS PREFILLED
         IF(ISERIE.EQ.1 .AND. .NOT.STRTAB) STRTVL(ISPAN) = T

C ASSIGN BEGINNING OF FIRST INTERVAL TO TABLE START VALUE
         BI = STRTVL(ISPAN)
         TMAX=BI+SIZSPN
      ENDIF
C
C         SEE IF CURRENT TIME BEYOND THIS SPAN
      IF(T.GT.TMAX) GOTO 150
C
C PRINT DATA
      IF(.NOT.BEGPRT) THEN
         BEGPRT=.TRUE.
C HEADING
         WRITE(PRINT, 1000)
 1000    FORMAT('1*** SELECTION SECTION ***'/)
         CALL SETLAB(YLAB,LLY,NDV,OBSNM,OBSUN,OBSLU)

         IF(MOD(IPRINT/2,2).EQ.1) WRITE(PRINT,1001) G,YLAB(1:LLY)
 1001    FORMAT(/4X,'IND. VAR.',15X,'DEP. VAR.',7X,'SIGMA',7X,'SPAN'/
     .    4X,A8,16X,A)
      ENDIF

      IF(MOD(IPRINT/2,2).EQ.1) WRITE(PRINT,1002) T,DEPVAR,SIG,ISPAN
 1002 FORMAT(F25.13,1PE14.5,E12.3,I9)

      IPOINT=(T-BI)/DELTA+1D0
      DATA(KW(ISPAN,IPOINT))=1.
      NPTSPN(ISPAN)=NPTSPN(ISPAN)+1

      IF(.NOT.WTFT) SIG=1.
      CALL FTINC(DATA(IDAT),DATA(IMAT),NPOINT,SNGL((T-BI)/EFFSPN),
     . DEPVAR,SIG)
C
C         GO READ ANOTHER RECORD
      GOTO 20
C
C         INCREMENT SPAN COUNTER
  150 ISPAN = ISPAN + 1
C
C         IF GOT ALL SPANS THEN GO FOR ANOTHER SERIES
      IF(ISPAN .GT. NSPAN) GOTO 160
C
C         REINITIALIZE FOR NEW SPAN
      BEGUN = .FALSE.
      IF(STRTAB) START = STRTVL(ISPAN)
      IDAT=KD(ISPAN,1)
      IMAT=KM(ISPAN,1)
C
C         PROCESS CURRENT TIME AS FIRST IN NEW SPAN
      GOTO 100
C
C         INCREMENT SERIES COUNTER
  160 ISERIE = ISERIE + 1
C
C         IF GOT ALL SERIES THEN GO WRAP UP
      IF(ISERIE .GT. NSERIE) GOTO 180
C
C         REINITIALIZE FOR NEW SERIES
      ISPAN = 1
      STRTAB = .TRUE.
      START = STRTVL(1)
      BEGUN = .FALSE.
      IDAT=KD(1,1)
      IMAT=KM(1,1)
      IF(IRC.EQ.2) GOTO 10
C
C         READ TO NEXT SERIES HEADER
  170 CALL RDLIB(4,IRC,T,DEPVAR,TIME,SIG)
C
      IF(IRC.EQ.1) GOTO 9
C
C         IF END OF SERIES GO READ NEW SERIES
      IF(IRC.EQ.2) GOTO 10
      GOTO 170
C
C         ALL SERIES PROCESSED. SHOW STATISTICS
  180 CONTINUE

C INVERT AND FORM POWER SPECTRUM
      NPTTOT=0
      DO ISPAN=1,NSPAN
         IDAT=KD(ISPAN,1)
         IMAT=KM(ISPAN,1)
         WCOUNT=DATA(IMAT)
         COUNT=DATA(IMAT+1)
         AVE=DATA(IDAT)/WCOUNT
         MENSQ=DATA(IDAT+1)/WCOUNT-AVE**2
         SQN=0.5*SQRT(COUNT)
         MAXCHAN=0
         POWMAX=0
         DO J=2,NPOINT
            IDAT=IDAT+2
            IMAT=IMAT+4
            B11=DATA(IMAT)
            B12=DATA(IMAT+1)
            B22=WCOUNT-B11
            IF(B11.EQ.0.) B11=1.
            IF(B22.EQ.0.) B22=1.
            DET=(B11*B22-B12**2)/SQN
            C1=(DATA(IDAT)-AVE*DATA(IMAT+2))/DET
            C2=(DATA(IDAT+1)-AVE*DATA(IMAT+3))/DET
            DATA(IDAT)=C1*B22-C2*B12
            DATA(IDAT+1)=-C1*B12+C2*B11
            POWER=DATA(IDAT)**2+DATA(IDAT+1)**2
            IF(POWER.GT.POWMAX) THEN
               MAXCHAN=J-1
               POWMAX=POWER
            ENDIF
         END DO
C THIS PROCESS BREAKS DOWN FOR THE ZERO-FREQUENCY AND MAX-FREQUENCY
C POINTS.  APPLY QUICK FIXES.
         IDAT=KD(ISPAN,1)
         DATA(IDAT)=2.*SQN*AVE
         DATA(IDAT+1)=0.
         DATA(IDAT+NPOINT+1)=0.
C CYCLE THRU DATA TO COUNT UP ZEROES
         NPTTOT=NPTTOT+NPTSPN(ISPAN)
         IWGT=KW(ISPAN,1)
         NZERO=0
         DO J=1,N
            IF(DATA(IWGT).EQ.0D0) NZERO=NZERO+1
            IWGT=IWGT+1
         END DO
         NRMPOW=POWMAX/MENSQ
         PROB=EXP(-NRMPOW)
         PERMAX=0
         IF(MAXCHAN.NE.0) PERMAX=EFFSPN/MAXCHAN
         WRITE(PRINT,205) ISPAN,NPTSPN(ISPAN),NZERO,(100*(N-NZERO))/N,
     .    MAXCHAN,POWMAX,PROB,MAXCHAN/EFFSPN,PERMAX,MENSQ,COUNT/WCOUNT
  205    FORMAT (/' STATISTICS FOR SPAN', I4/
     .    ' NUMBER OF DATA POINTS INCLUDED', I6/
     1    ' NUMBER OF ZERO ENTRIES IN DATA', I6/
     2    ' PERCENT OF DATA ARRAY FILLED  ', I6/
     3    ' PEAK POWER (CHANNEL',I6,')    ', 1PE12.4,' (P=',E12.4,')'/
     .    ' PEAK FREQUENCY AND PERIOD     ', 2E12.4/
     4    ' WEIGHTED SIGNAL VARIANCE      ', E12.4/
     5    ' RECIPROCAL MEAN WEIGHT        ', E12.4)
      END DO
      WRITE(PRINT,225) NPTTOT
  225 FORMAT(/' TOTAL DATA POINTS INCLUDED IN ALL SPANS',I6)

      RETURN
      END
