      SUBROUTINE FOUR1(DATA,LOG2N,ISIGN)
C     THIS IS THE SHORTEST VERSION OF THE COOLEY-TUKEY FAST FOURIER
C     TRANSFORM KNOWN TO THE AUTHOR.  IT TRANSFORMS 2**LOG2N COMPLEX
C     ONE-DIMENSIONAL DATA IN PLACE.    ISIGN = +1 OR -1, THE FORWARD
C     OR REVERSE TRANSFORM.  THE PROGRAM IS DELIBERATELY INEFFICIENT
C     (FACTOR OF TWO OR SO) FOR THE SAKE OF PEDAGOGY, BUT RUNS AS
C     USUAL IN N*LOG2N TIME, RATHER THAN THE NAIVE N**2.  THE TRANS-
C     FORM DONE IS --
C     TRAN(K) = SUM( DATA(J) * EXP(ISIGN*2*PI*I*(J-1)*(K-1)/N) )/SQRT(N)
C     SUMMED OVER J = 1 TO N, FOR ALL K = 1 TO N.  OUTPUT TRAN REPLACES
C     THE INPUT DATA.  SEE IEEE AUDIO AND ELECTROACOUSTICS TRANSACTIONS,
C     JUNE 1967 AND JUNE 1969.  WRITTEN BY NORMAN BRENNER, MIT AND IBM
C     RESEARCH, AUGUST 1970.
      DIMENSION DATA(1)
C     DIMENSION DATA(N)
      COMPLEX DATA,TEMP
      N=2**LOG2N
C     INITIALLY, PERMUTE THE DATA ARRAY BY EXCHANGING DATA(I+1) WITH
C     DATA(IREV+1), WHERE IREV, EXPRESSED IN BINARY, IS THE MIRROR
C     IMAGE OF I, SIMILARLY EXPRESSED.  FOR EXAMPLE, 10111 AND 11101,
C     FOR LOG2N = 5.  THIS PERMUTATION COULD EQUALLY BE DONE AT
C     THE END IF SUBROUTINE DFT2 IS CHANGED SLIGHTLY.
      IREV=0
C     SINCE I = 0 INITIALLY, IREV = 0 ALSO.
      DO 30 IP=1,N
      I=IP-1
C     PREVENT RE-EXCHANGING BY CHECKING THAT I IS LESS THAN IREV.
      IF(I.GT.IREV)GO TO 10
      TEMP = DATA(I + 1)/SQRT(FLOAT(N))
      DATA(I + 1) = DATA(IREV + 1)/SQRT(FLOAT(N))
      DATA(IREV+1)=TEMP
C     I IS CHANGED TO I+1 BY ADDING 1 TO THE LOWEST BIT AND PROPAGATING
C     CARRIES UPWARD (DONE BY THE HARDWARE).  SIMILARLY, WE ADD 1 TO
C     THE HIGHEST BIT OF IREV AND PROPAGATE CARRIES DOWNWARD, TO OBTAIN
C     THE REVERSAL OF I+1.
10    DO 20 L=1,LOG2N
      IPOW2=2**(LOG2N-L)
C     THIS DO-LOOP GOES ROUND ONLY SO LONG AS THE STRING OF 1-BITS
C     AT THE TOP OF IREV.
      IF(IREV.LT.IPOW2)GO TO 30
20    IREV=IREV-IPOW2
30    IREV=IREV+IPOW2
C     PERFORM LOG2N SUBSTAGES OF MANY TWO-POINT TRANSFORMS PLUS INTER-
C     MEDIATE PHASE SHIFT FACTORS.  A SUBROUTINE IS USED TO TAKE
C     ADVANTAGE OF VARIABLE DIMENSIONING.
      DO 40 L=1,LOG2N
40    CALL DFT2(DATA,2**(L-1),2**(LOG2N-L),N,ISIGN)
      RETURN
      END
