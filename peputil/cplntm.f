       PROGRAM CPLNTM
C        Copy a part of a planet integration data set.
C        R.Reasenberg    Nov 1977   Moon read option
C        J.F.Chandler  1978 May  Partials list option added
C        1979 Jun - Predict option added
C        1987 Jun - Plot osculating orbital elements
C        1992 Jul - Support card-image format
C        1995 Apr - Track circulating angular elements in plots
C        2010 Jan - Recognize Moon rotation partials
C        2011 Feb - Extended precision
      IMPLICIT NONE

C * * * * * *  UPDATE 'VERSN' AS NEEDED  * * * * * * * * * * * * * * * *
      CHARACTER*8 VERSN/'20110218'/
C
      INCLUDE '../pep/funcon.inc'
C
C           TAPE ASSIGNMENTS
      INTEGER*4  IPLNT1/11/, IPLNT2/12/, IADJST/0/
      INTEGER*4  IOUT/6/, IN/5/
C
C           TYPE STATEMENTS FOR PLANET TAPES
      INTEGER*4 NMPRM,NMBOD
      PARAMETER (NMPRM=100,NMBOD=30)
      REAL*10 PLANT1(6,8,499),SPRB(3,16,499)
      EQUIVALENCE (PLANT1(1,1,1),SPRB(1,1,1))
      CHARACTER*8 TITLE(10),DATE
      CHARACTER*4 TIT4(20),PRD/' PRD'/,LEVEL
      EQUIVALENCE (TIT4(1),TITLE(1))
      REAL*10 SECP,CON1(12),CON2(NMPRM),PCOND(NMBOD),CON(NMBOD-6)
      REAL*10 PCOND1(6)
      EQUIVALENCE (PCOND1(1),PCOND(1)),(CON(1),PCOND(7))
      REAL*10 FRACT,XINT
      REAL*4 BEPS(6)
      INTEGER*2  ICND,IHRP,IMINP,KKP(100)
      INTEGER*2 NPL,NCP,IPAR1,KP(NMPRM),INTP
      INTEGER*2 IPAR2
      INTEGER*2 NUMKI,KI(99)
      INTEGER*2 NPARITR,NPARIT1,NPARPL(20)
C
C        OTHER TYPE STATEMENTS
      LOGICAL*4 CPYPTL/.TRUE./, STOP/.FALSE./, SKPHDR/.FALSE./,
     1 MOON/.FALSE./, FXFRCT, BDFRCT/.FALSE./
      LOGICAL*4 LSTPTL/.FALSE./, IAU80N/.FALSE./, LSTNUT/.FALSE./
      LOGICAL*4 CRDIN/.FALSE./, CRDOUT/.FALSE./
      INTEGER*4 LIST/0/
      INTEGER*2 KPRNT/0/, KPHAR/0/, LPRNT/0/
      INTEGER*4 JDSPAN(2)/2*0/
      REAL*4 PSID(8),EPSD(8),LIBRT(8,3)
      REAL*8 DPSI,DEPS
      INTEGER*4 IZR,ZERO(20),IZERO(100)/100*0/
      EQUIVALENCE (ZERO(1),IZERO(1),IZR)
      CHARACTER*16 FRMT/'(I19,1P,6D19.11)'/
      CHARACTER*4 EXTP,EXTPO/' EXT'/
C
      INTEGER*2 KTA(99),KTH(99),IPTR(99), IKTA,IKTH
      CHARACTER*8 ATITL(10),ADJUST/'ADJUSTP '/,ATYPE
      REAL*10 PRMADJ(499)
C
      REAL*10 CNDX(6),MMOT,CNDS(6),CNDVR,CNDAV,CNDCYC(6),CNDWID,
     . ELPTC(35),YLPT(6),RYLPT,DYLPT(6,6)
      REAL*4 CNDP(503,15),TIMP(503)
      INTEGER*4 NPLTMX/500/, PLTINT/1/
      LOGICAL*4 PLTICS,PLTCRT,PLTIC(15)/15*.FALSE./
      CHARACTER*10 TAG(15)/'   dA (AU)',' dE','dINC (deg)','dASC (deg)',
     . 'dPER (deg)','  dl (deg)',
     . '  dX (AU) ','  dY (AU) ','  dZ (AU) ',
     . '     dX/dA','dX/dE (AU)','dX/dI (AU)','dX/dO (AU)','dX/dW (AU)',
     . 'dX/dL (AU)'/
C
      REAL*10 FRACT0,HC1,HC2,SCLFCT,SQGM,T,TABINT,TABPLT,
     . TMASS,TNEXT,TPLT,TPREV,TTHIS,TTI,WW,XINTS
      INTEGER*4 I,IDIR,IEND,IEPOCH,IFILTR,II,IIK,IKP,IKPL,
     . INTP1,INTP2,INTP5,IORD,IP,IRTYP,IVEL,IVELP,J,JD,
     . JD0,JD1,JD1X,JD1Y,JD2,JD2X,JORD,K,KADJ,KM,KPJ,KPLT,L,
     . LINE,LINET,LK,LP,M1,M2,NCNMX,NLFLAG,NPARAM,NPERR,NPLT,NPL100,
     . NPL130,NPL99,NPRMX,NRCFIL,NUMPRO,NUMPRT,NUMPT1,NUMPT2,N1,N2
C
      NAMELIST/CARDS/ JDSPAN,TITLE,CPYPTL,STOP,LIST,IPLNT2,
     1 SKPHDR,LSTPTL,IADJST,KPRNT,KPHAR,LPRNT,IAU80N,LSTNUT,
     2 PLTIC,PLTINT,CRDIN,CRDOUT
C
C        NAME      USE
C
C        JDSPAN(2) IF .LT.0  -JDSPAN(I) REPLACES JDI
C                  IF .EQ.0  JDI UNCHANGED   (DEFAULT)
C                  IF .GT.0  REPLACES JDI IF INTERNAL TO
C                  SPAN  JD1 -- JD2
C        LIST      LIST THE FIRST (OF 5 OR 8) INTEGRATION LINES OF
C                  EVERY "LIST" READS
C                  IF .EQ.0  NO LISTING
C                  IF .EQ.-1  LIST ALL INTEGRATION LINES
C        LSTPTL    IF TRUE (AND IF LIST.NE.0) THEN LIST PARTIALS
C                  ALONG WITH COORDINATES
C        TITLE     80-BYTE HEADER CONTAINING THE 8-BYTE
C                  PLANET NAME PLUS 72 BYTES FROM THE
C                  PEP TITLE CARD
C        STOP      IF TRUE, PROGRAM STOPS AFTER READING AND PRINTING
C                  FIRST TWO RECORDS OF INPUT DATA SET
C        SKPHDR    IF TRUE, PROGRAM SKIPS PRINTING THE INFORMATION
C                  ON THE SECOND RECORD OF THE INPUT DATA SET
C        IPLNT2    IF .GT.0  DATA SET UNIT NUMBER FOR OUTPUT
C                  IF .LE.0  NO OUTPUT DATA SET
C        IADJST    IF .GT.0  READ ADJUSTMENTS FROM DATA SET
C                  IADJST AND APPLY TO THE OUTPUT USING THE
C                  INTEGRATED PARTIALS.  DATA SET IS SUPPLIED
C                  BY PROGRAM ADJTAP.
C        KPRNT     PARTIAL SELECTOR FOR PRINTING (SEE PEP SUBR BODRED
C                  FOR DEFINITIONS OF KI ARRAY: 100*N+M OR M)
C        KPHAR     HARMONIC COEFFICIENT SELECTOR WITH KPRNT=431, ETC.
C                  (1 FOR J2, C21, ETC.)
C        LPRNT     PARTIAL SELECTOR FOR PRINTING, ALTERNATIVE TO KPRNT
C                  (RELATIVE POSITION IN TAPE RECORDS: '2' FOR 1ST
C                  PARTIAL, '3' FOR 2ND, ETC.)
C        IAU80N    IF TRUE AND IF COPYING MOON TAPE, THEN SUBSTITUTE
C                  IAU 80 NUTATION SERIES ON OUTPUT (DEFAULT=FALSE)
C        LSTNUT    IF TRUE AND IF COPYING MOON TAPE, THEN LIST THE
C                  NUTATION SERIES ON INPUT (DEFAULT=FALSE)
C        PLTIC     IF PLTIC(I) IS TRUE, THEN PLOT OSCULATING ELLIPTIC
C                  ELEMENT I, I=1,6 OR CARTESIAN OFFSET I-6, I=7,9
C                  OR OFFSET OF PARTIAL OF X W.R.T. I.C. I-9, I=10,15
C                  (DEFAULT FALSE)
C                  NOTE: ALL I.C. PARTIALS MUST BE INTEGRATED FOR THE
C                  LAST SECTION OF PLOTS TO WORK
C        PLTINT    PLOTTING INTERVAL: EVERY 'PLTINT' TABULAR POINTS
C                  (DEFAULT 1)
C        CRDIN     If true, input tape is card-image format. (Def=F)
C        CRDOUT    If true, output tape is card-image format. (Def=F)
C*  START=100
C
C
      WRITE(IOUT,100) VERSN
  100 FORMAT('1  CPLNTM    PEP INTEGRATION COPIER  VERSION= ',A8)
      LINE=1
C
C           READ INPUT CONTROLS
      READ(IN,CARDS,END=101)
      GOTO 103
C           END ON INPUT UNIT
  101 WRITE(IOUT,102)
  102 FORMAT(' - - - END-OF-FILE ON NAMELIST INPUT - - -')
      LINE=LINE+1
C
C           CLEAN UP PARTIALS SELECTION
  103 IF(LPRNT.GT.1) KPRNT=0
      IF(.NOT.LSTPTL) GOTO 105
      KPRNT=0
      KPHAR=0
      LPRNT=0
C
C           READ FIRST RECORD OF PLANET OR MOON TAPE
  105 IF(CRDIN) THEN
         READ(IPLNT1,106) TITLE,DATE
  106    FORMAT(10A8/ A8,A4)
      ELSE
         READ(IPLNT1) TITLE,DATE
      ENDIF
      WRITE(IOUT,110) IPLNT1,TITLE,DATE
  110 FORMAT('0INTEGRATION ON UNIT',I5,' HAS TITLE ',A8,1X,10A8)
      LINE=LINE+2
C
C           READ 2ND RECORD
      IF(CRDIN) THEN
         READ(IPLNT1,111) NPL,NCP,IPAR1,INTP,JD1,JD0,JD2,EXTP,NPRMX,
     .    NCNMX
  111    FORMAT(4I5,3I10,A4,2I4)
         IF(NPRMX.LT.NMPRM) NPRMX=NMPRM
         IF(NCNMX.LT.NMBOD) NCNMX=NMBOD
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,112) (PCOND(I),I=1,NCNMX),CON1,
     .       (CON2(I),I=1,NPRMX)
  112       FORMAT(1P,3D26.19)
            READ(IPLNT1,1112) BEPS,(KP(I),I=1,NPRMX)
 1112       FORMAT(2(1P3E17.9/),(16I5))
            READ(IPLNT1,2112) M1,M2,
     2       ICND,INTP1,INTP2,IHRP,IMINP,SECP,KKP,IFILTR,LEVEL,
     3       NUMKI,NPARITR,(KI(I),I=1,NUMKI)
 2112       FORMAT(3I5,3I10,I3,0PF22.18/ 6(16I5/), 4I5,I7,1X,A4,2I5/
     2       (16I5))
         ELSE
            NPRMX=100
            NCNMX=30
            READ(IPLNT1,113) (PCOND(I),I=1,30),CON1,(CON2(I),I=1,100),
     .       BEPS,(KP(I),I=1,100),M1,M2,
     2       ICND,INTP1,INTP2,IHRP,IMINP,SECP,KKP,IFILTR,LEVEL,
     3       NUMKI,NPARITR,(KI(I),I=1,NUMKI)
  113       FORMAT(47(1P,3D25.17/),D25.17,2(3E17.9/),6(16I5/),
     1       4I5/3I5,3I10,I3,0PF20.16/ 6(16I5/), 4I5,I7,1X,A4,2I5/
     2       (16I5))
         ENDIF
         IF(NPARITR.GT.0) THEN
            READ(IPLNT1,114) NPARIT1,(NPARPL(I),I=1,NPARIT1)
  114       FORMAT(20I4)
         ELSE
            NPARIT1=1
            NPARPL(1)=0
         ENDIF
      ELSE
         READ(IPLNT1) NPL,NCP,IPAR1,INTP,JD1,JD0,JD2,NPRMX,NCNMX,
     1    (PCOND(I),I=1,NCNMX),CON1,(CON2(I),I=1,NPRMX),BEPS,
     2    (KP(I),I=1,NPRMX),M1,M2,
     3    ICND,INTP1,INTP2,IHRP,IMINP,SECP,KKP,IFILTR,LEVEL,
     4    NUMKI,(KI(I),I=1,NUMKI),
     5    NPARITR,NPARIT1,(NPARPL(I),I=1,NPARIT1)
      ENDIF
      IF(NPRMX.GT.NMPRM .OR. NCNMX.GT.NMBOD) CALL SUICID(
     . 'BAD NUMBER OF PARAMETERS',6)
      DO I=NPRMX+1,NMPRM
         KP(I)=-1
         CON2(I)=0._10
      END DO
      DO I=NCNMX+1,NMBOD
         PCOND(I)=0._10
      END DO
      CALL KP2KI(KP,NUMKI,KI)
      PLTICS=PLTIC(1).OR.PLTIC(2).OR.PLTIC(3).OR.PLTIC(4).OR.
     1 PLTIC(5).OR.PLTIC(6).OR.PLTIC(7).OR.PLTIC(8).OR.PLTIC(9)
     . .OR.PLTIC(10).OR.PLTIC(11).OR.PLTIC(12)
      PLTCRT=PLTIC(7).OR.PLTIC(8).OR.PLTIC(9).OR.PLTIC(10)
      IF(.NOT.PLTICS) GOTO 115
C           SET UP FOR PLOTTING
      IF(PLTINT.LE.0) PLTINT=1
      TABINT=INTP
      IF(INTP.LE.0) TABINT=2D0**INTP
      TABPLT=PLTINT*TABINT
      FRACT0=INTP1*2D0**INTP2
      NPLT=0
      TMASS=1D0
      IF(NCP.GT.0) TMASS=CON2(NCP)
      IF(NCP.LE.0.AND.NPL.LE.30) TMASS=1D0+CON2(NPL)
      IF(TMASS.LE.0D0.OR.TMASS.GE.2D0) TMASS=1D0
      SQGM=SQRT(TMASS)*GAUSS
      MMOT=SQGM/PCOND(1)/SQRT(PCOND(1))/CONVD
      DO I=1,6
         CNDCYC(I)=0._10
         CNDS(I)=PCOND(I)
      END DO
  115 CONTINUE
C           FIX FRACTIONS ON MOON, PLANETS
      FXFRCT=NPL.GE.1.AND.NPL.LE.10
C
C           READ FILTER HEADER/TRAILER
      IF(IFILTR.GT.0) THEN
         IF(CRDIN) THEN
            IF(EXTP.EQ.EXTPO) THEN
               READ(IPLNT1,116) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
  116          FORMAT(1P,3D26.19/ 3I10)
            ELSE
               READ(IPLNT1,117) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
  117          FORMAT(1P,3D25.17/ 3I10)
            ENDIF
         ELSE
            READ(IPLNT1) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
         ENDIF
      ENDIF
C
      IF(SKPHDR) GOTO 130
      WRITE(IOUT,120) JD0,JD1,JD2,BEPS,ICND,PCOND1,(KP(I),I=1,NPRMX)
  120 FORMAT('0SECOND RECORD CONTAINS'/
     1 '0JD0,JD1,JD2=',3I10,'  EPS=',1P,6E13.5/
     2 '0COND(ICND=',I3,')=',0P,2F18.14,F18.13,3F18.12 /
     3 '0KP=',(T10,4(5I5,2X)))
      WRITE(IOUT,121) KKP,(CON(I),I=7,NCNMX),CON1
  121 FORMAT('0KKP=',5(T10,4(5I5,2X)/),'0CON1=',(T10,1P,6D20.10))
      WRITE(IOUT,122) (CON2(I),I=1,NPRMX)
  122 FORMAT('0CON2=',(T10,1P,6D20.10))
      WRITE(IOUT,123) NPL,NCP,IPAR1,INTP,M1,M2,IFILTR,
     2 INTP1,INTP2,IHRP,IMINP,SECP,LEVEL,NUMKI,(KI(I),I=1,NUMKI)
  123 FORMAT('0NPL,NCP,IPAR1,INTP,M1,M2,IFILTR=',7I10/
     6 '0INTP1,INTP2,IHR,IMIN,SEC=',4I10,0PF12.6,10X,'LEVEL=',A4/
     7 '0NUMKI=',I3,'  KI=',7I3,3(5I5,2X)/(T10,4(5I5,2X) )  )
      IF(NPARITR.GT.0) THEN
         WRITE(IOUT,125) NPARITR,(NPARPL(I),I=1,NPARITR)
  125    FORMAT(' INDIRECT PARTIALS ITERATED FOR',I3,' BODIES:',
     .    (20I3))
         LINE=LINE+1+(NPARITR-1)/20
      ENDIF
      LINE=LINE+49+(NUMKI-3)/20
C
  130 IRTYP=1
      IDIR=1
      IF(JD2.LT.JD1) IDIR=-1
      KM=5
      IF(NPL.NE.10) GOTO 140
      IRTYP=2
      KM=8
      MOON=.TRUE.
      GOTO 160
  140 IF(KP(88).GT.0) GOTO 160
      IRTYP=3
      KM=1
      IVEL=6
C     IVELP=12
  160 CONTINUE
      KPLT=KM+1
C
C*  START=200
      KADJ=0
      IF(IADJST.GT.0) GOTO 185
      IF(KPRNT.EQ.0) GOTO 800
      GOTO 220
  185 IF(LINE.LE.30) GOTO 195
      WRITE(IOUT,190)
  190 FORMAT('1  OUTPUT PREDICTED PLANET TAPE')
      LINE=1
  195 CONTINUE
      TIT4(20)=PRD
      READ(IADJST) ATYPE,ATITL
      WRITE(IOUT,200) IADJST,ATYPE,ATITL
  200 FORMAT('0INPUT PARAMETER ADJUSTMENTS DATA SET',I3,' HAS TITLE:'/
     1 2X,11A8)
      LINE=LINE+3
      IF(ATYPE.EQ.ADJUST) GOTO 220
      WRITE(IOUT,210)
  210 FORMAT(' * * * WRONG TYPE OF TAPE FOR ADJUSTMENTS * * *')
      LINE=LINE+1
      GOTO 520
C           MAKE TABLE OF PARTIALS
  220 DO 230 I=1,99
        IPTR(I)=0
        KTA(I)=0
        KTH(I)=0
  230 END DO

      IF(IPAR1.LE.1) GOTO 520
      NPL100=NPL*100
      NPL99=NPL100-ISIGN(1,NPL100)
      NPL130=NPL100+30
      IF(NPL.LE.0) NPL130=99999999
      IF(KPRNT.EQ.NPL130) KPRNT=31
      LP=1
C           DO I.C. PARTIALS FIRST
      IF(KI(1).EQ.0) GOTO 300
      DO J=2,7
         IF(KI(J).GE.0) THEN
            LP=LP+1
            KTA(LP)=NPL99+ISIGN(J,NPL100)
         ENDIF
      END DO
C
C*  START=300
C           START LOOP 8-NUMKI
  300 J=8
  310 KPJ=KI(J)
      J=J+1
      IF(KPJ.EQ.0) GOTO 500
      LP=LP+1
      IF(KPJ.LT.0) THEN
         IF(KPJ.LT.-100) THEN
C ROTATION PARAMETER
            KTA(LP)=KPJ
         ELSE
C INTEGRATED BODY PARAMETER
            KTA(LP)=NPL100+ISIGN(6-KPJ,NPL100)
         ENDIF
         GOTO 400
      ENDIF
C           ALL OTHER PARAMETERS
      IKP=MOD(KPJ-1,100)+1
      IF(KPJ.LE.100.OR.IKP.LT.31) THEN
C           ORDINARY PARAMETER
         KTA(LP)=KPJ
         GOTO 400
      ENDIF
C PLANET HARMONIC COEFF.
      IF(IKP.EQ.31) THEN
C ZONAL HARMONIC COEFF.
         N1=KI(J)-1
         N2=KI(J+1)-1
         J=J+2
      ELSE
C TESSERAL HARMONIC
         N1=(KI(J)*(KI(J)-1))/2+KI(J+1)-1
         N2=(KI(J+2)*(KI(J+2)-1))/2+KI(J+3)-1
         J=J+4
      ENDIF
C           PUT IN MULTIPLE PARTIALS
      DO I=N1,N2
         KTA(LP)=KPJ
         KTH(LP)=I
         LP=LP+1
      END DO
      LP=LP-1
C           END OF LOOP 8-NUMKI
  400 IF(J.LE.NUMKI) GOTO 310
C
C*  START=500
  500 IF(LP.EQ.IPAR1) GOTO 600
      WRITE(IOUT,510) LP,IPAR1
  510 FORMAT('0******** INPUT NUMBER OF PARTIALS DOES NOT MATCH, LP=',
     1I3,', BUT IPAR1=',I3,' ********')
      LINE=LINE+2
  520 WRITE(IOUT,530)
  530 FORMAT('0 ADJUSTMENT/PARTIALS RUN CANCELLED')
      LINE=LINE+2
      STOP 20
  600 IF(KPRNT.EQ.0) GOTO 680
C           MATCH PARTIALS REQUEST
      DO 620 L=2,LP
      IF(KPRNT.NE.KTA(L).OR.KPHAR.NE.KTH(L)) GOTO 620
      LPRNT=L
      GOTO 680
  620 CONTINUE
      WRITE(IOUT,630) KPRNT,KPHAR
  630 FORMAT('0PARTIAL NOT FOUND: KPRNT,KPHAR=',I5,I4)
      GOTO 520
C
C*  START=700
C        MATCH ADJUSTED PARAMETERS
  680 IF(IADJST.LE.0) GOTO 800
  700 READ(IADJST) NPARAM
      DO 720 I=1,NPARAM
      READ(IADJST) II,IKTA,IKTH,PRMADJ(KADJ+1),SCLFCT
      IF(IKTA.EQ.NPL130) IKTA=31
      DO 710 L=2,LP
      IF(IKTA.NE.KTA(L).OR.IKTH.NE.KTH(L)) GOTO 710
C        FOUND CORRECT PARTIAL
      KADJ=KADJ+1
      IPTR(L)=KADJ
C        APPLY ADJUSTMENTS TO HEADER INFORMATION
      IF(IKTA.GT.100.OR.IKTA.LT.0) GOTO 705
      CON2(IKTA)=CON2(IKTA)+PRMADJ(KADJ)*SCLFCT
      GOTO 720
  705 IKPL=IKTA/100
      IF(IKTA.LT.0) IKPL=IKPL-1
      IF(IKPL.NE.NPL) GOTO 720
      IIK=IKTA-100*IKPL
      IF(IIK.LE.30) PCOND(IIK)=PCOND(IIK)+PRMADJ(KADJ)*SCLFCT
      GOTO 720
  710 CONTINUE
  720 CONTINUE
      WRITE(IOUT,730) KADJ,(KTA(I),KTH(I),IPTR(I),PRMADJ(IPTR(I)),
     1 I=2,LP)
  730 FORMAT('0 UNSCALED ADJUSTMENTS FOR',I3,' PARAMETERS.' /
     1 4('   KTA  H IP  ADJ',10X)/4(I6,2I3,1PD15.7))
      LINE=LINE+2+(LP+2)/4
      REWIND IADJST
      IF(KADJ.LE.0) GOTO 520
C
C*  START=800
  800 IPAR2=IPAR1
      IF(CPYPTL) GOTO 830
      WRITE(IOUT,810) IPAR1
  810 FORMAT('0IPAR1 CHANGED FROM',I5,' TO 1')
      LINE=LINE+2
      IPAR2=1
      NUMKI=8
      DO 820 I=1,NUMKI
        KI(I)=0
  820 END DO

C           SET UP NUMBER OF PARTIALS FOR NORDSIECK FORMAT TAPES
  830 NUMPRO=IPAR2-1
      NUMPT2=NUMPRO
      IF(NUMPT2.LT.1) NUMPT2=1
      NPERR=0
C
C        ESTABLISH OUTPUT DATA SET TIME SPAN  (JD1,JD2)
      IF(LINE.LE.54) GOTO 836
      WRITE(IOUT,833)
  833 FORMAT('1  CPLNTM OPTIONS')
      LINE=1
  836 CONTINUE
      JD1X=JD1
      IF(JDSPAN(1).LT.0) JD1X=-JDSPAN(1)
      IF(JDSPAN(1).GT.0.AND.IDIR*(JDSPAN(1)-JD1).GT.0) JD1X=JDSPAN(1)
      JD2X=JD2
      IF(JDSPAN(2).LT.0) JD2X=-JDSPAN(2)
      IF(JDSPAN(2).GT.0.AND.IDIR*(JDSPAN(2)-JD2).LT.0) JD2X=JDSPAN(2)
      IF(IFILTR.GT.0.AND.TTHIS.GT.JD1X) JD1X=TTHIS
C
      IF(IPAR1.LE.1) LSTPTL=.FALSE.
      LINE=LINE+6
      WRITE(IOUT,840) CPYPTL,STOP,MOON,LIST,IPLNT2
     1  ,LSTPTL,SKPHDR,IAU80N,LSTNUT,PLTIC,PLTINT
  840 FORMAT('0CPYPTL,STOP,MOON=',3L3,'  LIST,IPLNT2=',2I4,
     1 '  LSTPTL=',L3,'  SKPHDR=',L3,
     2 T100,'#OPTIONS#'/ '0IAU80N,LSTNUT=',2L2,'  PLTIC=',15L2,
     3 '  PLTINT=',I4,T100,'#OPTIONS#')
      IF(JDSPAN(1).EQ.JD1X .AND. JDSPAN(2).EQ.JD2X) GOTO 860
      WRITE(IOUT,850) JDSPAN,JD1X,JD2X
  850 FORMAT('0OUTPUT TIME SPAN REQUEST',2I10,' CHANGED TO',2I10,
     1 T100,'#OPTIONS#')
      GOTO 880
  860 WRITE(IOUT,870) JDSPAN
  870 FORMAT('0OUTPUT TIME SPAN REQUEST',2I10,' UNCHANGED',
     1 T100,'#OPTIONS#')
C        IS THE OUTPUT TIME SPAN .GT. 0
  880 IF(IDIR*(JD1X-JD2X).LT.0) GOTO 1000
      WRITE(IOUT,890)
  890 FORMAT('0STOP    IDIR*(JD2X-JD1X).LT.0')
      STOP
C
C*  START=1000
 1000 CONTINUE
      IF(STOP) GOTO 2020
      NRCFIL=0
      IEND=0
      IF(INTP.GT.0) XINT=INTP
      IF(INTP.LE.0) XINT=2D0**INTP
      XINTS=XINT
      IF(IDIR.LT.0) XINTS=-XINT
      INTP5=KM*XINT+1.99D0
      JD1Y=JD1X-IDIR*INTP5
      IF(IDIR*(JD1-JD1X).GE.0) GOTO 1020
C        CAN'T DO FAST SKIP ON CARD-IMAGE FILE
      IF(CRDIN) GOTO 1020
C        FAST SKIP OF INPUT DATA SET RECORDS
 1010 READ(IPLNT1,END=2000) JD1,FRACT
      IF(IFILTR.LE.0) GOTO 1015
      TTHIS=JD1+FRACT
      IF(TTHIS.GT.TNEXT) IEND=IEND+1
      IF(IEND.LT.3) GOTO 1015
C           READ NEXT FILTER HEADER/TRAILER AND START NEXT SPAN
      READ(IPLNT1,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
      IEND=0
      GOTO 1010
 1015 IF((JD1-JD1Y)*IDIR.LT.0) GOTO 1010
C*  START=1100
C        SLOW SKIP OF INPUT DATA SET RECORDS
 1020 GOTO(1025,1030,1035), IRTYP
 1025 IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,1026,END=2000) JD1,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,5)
 1026       FORMAT(I10,1PD26.19,I5/ (3D26.19))
         ELSE
            READ(IPLNT1,1027,END=2000) JD1,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,5)
 1027       FORMAT(I10,1PD25.17,I5/ (3D25.17))
         ENDIF
      ELSE
         READ (IPLNT1,END=2000) JD1,FRACT,IVEL,(((PLANT1(I,K,J),
     1         I=1,IVEL),J=1,IPAR1),K=1,5)
      ENDIF
      GOTO 1040
 1030 IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,1026,END=2000) JD1,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,8)
         ELSE
            READ(IPLNT1,1027,END=2000) JD1,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,8)
         ENDIF
         READ(IPLNT1,1031,END=2000) (PSID(J),EPSD(J),J=1,8),
     1          ((LIBRT(J,I),I=1,3),J= 1, 8)
 1031    FORMAT(4(1P,4E17.9/), (3E17.9))
      ELSE
         READ(IPLNT1,END=2000) JD1,FRACT,IVEL,(((PLANT1(I,K,J),
     1         I=1,IVEL),J=1,IPAR1),K=1,8),
     2          (PSID(J),EPSD(J),J= 1, 8),
     3          ((LIBRT(J,I),I=1,3),J= 1, 8)
      ENDIF
      GOTO 1040
 1035 IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,1036,END=2000) JD1,FRACT,IORD,JORD,NUMPRT,
     1       NUMPT1,((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),
     2       I=1,3),J=1,JORD),LK=1,NUMPT1),HC1,HC2
 1036       FORMAT(I10,1PD26.19,4I5/ (3D26.19))
         ELSE
            READ(IPLNT1,1037,END=2000) JD1,FRACT,IORD,JORD,NUMPRT,
     1       NUMPT1,((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),
     2       I=1,3),J=1,JORD),LK=1,NUMPT1),HC1,HC2
 1037       FORMAT(I10,1PD25.17,4I5/ (3D25.17))
         ENDIF
      ELSE
         READ(IPLNT1,END=2000) JD1,FRACT,IORD,JORD,NUMPRT,NUMPT1,
     1 ((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),I=1,3),
     2 J=1,JORD),LK=1,NUMPT1),HC1,HC2
      ENDIF
      IF(NUMPRT.NE.IPAR1-1) NPERR=NPERR+1
      IF(IFILTR.LE.0) GOTO 1040
      TTHIS=JD1+FRACT
      IF(TTHIS.GT.TNEXT) IEND=IEND+1
      IF(IEND.LT.3) GOTO 1040
C           READ NEXT FILTER HEADER/TRAILER AND START NEXT SPAN
      IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,116,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
         ELSE
            READ(IPLNT1,117,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
         ENDIF
      ELSE
         READ(IPLNT1,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
      ENDIF
      IEND=0
      IF(TNEXT.GT.JD2X) NLFLAG=1
      GOTO 1020
 1040 IF((JD1-JD1X)*IDIR.LT.0) GOTO 1020
C        FOUND FIRST DESIRED DATA RECORD ON INPUT DATA SET
      BEPS(1)=FRACT
      JD=JD1
      JD2=JD2X
C
C*  START=1200
C        TIME TO START TO WRITE OUTPUT DATA SET
C
      IF(IPLNT2.LE.0) GOTO 1190
      IF(CRDOUT) THEN
         WRITE(IPLNT2,106) TITLE,DATE,LEVEL
         WRITE(IPLNT2,111) NPL,NCP,IPAR2,INTP,JD1,JD0,JD2,EXTPO,NMPRM,
     .    NMBOD
         WRITE(IPLNT2,112) PCOND,CON1,CON2
         WRITE(IPLNT2,1112) BEPS,KP
         WRITE(IPLNT2,2112) M1,M2,
     2       ICND,INTP1,INTP2,IHRP,IMINP,SECP,KKP,IFILTR,LEVEL,
     3       NUMKI,NPARITR,(KI(I),I=1,NUMKI)
         IF(NPARITR.GT.0) WRITE(IPLNT2,114) NPARIT1,
     1    (NPARPL(I),I=1,NPARIT1)
      ELSE
         WRITE(IPLNT2) TITLE,DATE,LEVEL
         WRITE(IPLNT2) NPL,NCP,IPAR2,INTP,JD1,JD0,JD2,NMPRM,NMBOD,
     1       PCOND,CON1,CON2,BEPS,KP,M1,M2,
     2       ICND,INTP1,INTP2,IHRP,IMINP,SECP,KKP,IFILTR,LEVEL,
     3       NUMKI,(KI(I),I=1,NUMKI),
     4       NPARITR,NPARIT1,(NPARPL(I),I=1,NPARIT1),
     5       IZERO,IZERO,IZERO
      ENDIF
      IF(IFILTR.GT.0) THEN
         IF(CRDOUT) THEN
            WRITE(IPLNT2,116) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG,NRCFIL
         ELSE
            WRITE(IPLNT2) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG,NRCFIL,ZERO
         ENDIF
      ENDIF
 1190 IF(LIST.EQ.0) GOTO 1320
      WRITE(IOUT,1200)
 1200 FORMAT('1   JD ',5X,'FRACT',12X,'X',17X,'Y',17X,'Z',16X,
     1 'DX/DT',13X,'DY/DT',13X,'DZ/DT'/)
      LINE=2
      LINET=LIST
      IF(IFILTR.GT.0)
     1   WRITE(IOUT,1210) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG,NRCFIL
 1210 FORMAT('0TPREV,TTHIS,TNEXT=',3F15.5,' IEPOCH=',I3,' NLFLAG=',I2,
     1 ' NRCFIL=',I4/)
      IF(IAU80N) WRITE(IOUT,1220)
 1220 FORMAT(26X,'PSI',16X,'EPS'/)
      GOTO 1320
C
C*  START=1300
C        START OF MAIN COPY LOOP
C
C
 1300 GOTO(1305,1310,1315), IRTYP
 1305 IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,1026,END=2000) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,5)
         ELSE
            READ(IPLNT1,1027,END=2000) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,5)
         ENDIF
      ELSE
         READ(IPLNT1,END=2000) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1         I=1,IVEL),J=1,IPAR1),K=1,5)
      ENDIF
      GOTO 1320
 1310 IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,1026,END=2000) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,8)
         ELSE
            READ(IPLNT1,1027,END=2000) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR1),K=1,8)
         ENDIF
         READ(IPLNT1,1031,END=2000) (PSID(J),EPSD(J),J=1,8),
     3          ((LIBRT(J,I),I=1,3),J= 1, 8)
      ELSE
         READ(IPLNT1,END=2000) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1         I=1,IVEL),J=1,IPAR1),K=1,8),
     2          (PSID(J),EPSD(J),J= 1, 8),
     3          ((LIBRT(J,I),I=1,3),J= 1, 8)
      ENDIF
      GOTO 1320
 1315 IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,1036,END=2000) JD,FRACT,IORD,JORD,NUMPRT,
     1       NUMPT1,((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),
     2       I=1,3),J=1,JORD),LK=1,NUMPT1),HC1,HC2
         ELSE
            READ(IPLNT1,1037,END=2000) JD,FRACT,IORD,JORD,NUMPRT,
     1       NUMPT1,((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),
     2       I=1,3),J=1,JORD),LK=1,NUMPT1),HC1,HC2
         ENDIF
      ELSE
         READ(IPLNT1,END=2000) JD,FRACT,IORD,JORD,NUMPRT,NUMPT1,
     1    ((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),
     2    I=1,3),J=1,JORD),LK=1,NUMPT1),HC1,HC2
      ENDIF
      IF(NUMPRT.NE.IPAR1-1) NPERR=NPERR+1
      IF(IFILTR.LE.0) GOTO 1320
      T=JD+FRACT
      IF(T.GT.TNEXT) IEND=IEND+1
C
 1320 IF(KADJ.LE.0) GOTO 1400
C        APPLY ADJUSTMENTS BEFORE COPYING OR PRINTING
      IVELP=IVEL
      IF(IRTYP.EQ.3) IVELP=MIN0(4,IORD,JORD)*3
      DO 1341 I=1,IVELP
        DO 1340 K=1,KM
            WW=0D0
            DO 1330 J=2,IPAR1
                IP=IPTR(J)
                IF(IP.LE.0) GOTO 1330
                    WW=WW+PLANT1(I,K,J)*PRMADJ(IP)
 1330       END DO
            PLANT1(I,K,1)=PLANT1(I,K,1)+WW
 1340   END DO
 1341 END DO
C
C*  START=1400
 1400 IF(.NOT.FXFRCT.OR.(FRACT.EQ.0D0)) GOTO 1403
      IF(.NOT.BDFRCT) WRITE(IOUT,1401) JD,FRACT
 1401 FORMAT('0*** WARNING: NON-ZERO FRACT. JD.F=',I8,F9.8,
     1 ' (ALL SUCH SET TO ZERO) ***')
      FRACT=0D0
      BDFRCT=.TRUE.
 1403 IF(IPLNT2.LE.0) GOTO 1420
      GOTO(1405,1406,1415), IRTYP
 1405 IF(CRDOUT) THEN
         WRITE(IPLNT2,1026) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR2),K=1,5)
      ELSE
         WRITE(IPLNT2) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR2),K=1,5),ZERO
      ENDIF
      GOTO 1420
C
C           PRINT INPUT NUTATION ANGLES
 1406 IF(LSTNUT .AND. LIST.GT.0 .AND. LINET+1.EQ.LIST)
     1 WRITE(IOUT,1407) JD,PSID(1),EPSD(1)
 1407 FORMAT(' INFILE JD=',I7,T19,1P,2E18.7)
C
C         REPLACE NUTATION SERIES
      IF(.NOT.IAU80N) GOTO 1410
      TTI=DFLOAT(JD-2451545)+FRACT-0.5D0
      DO 1408 J=1,KM
        CALL IAU80(TTI/36525D0,DPSI,DEPS)
        PSID(J)=DPSI*CONVDS
        EPSD(J)=DEPS*CONVDS
        TTI=TTI+XINTS
 1408 END DO
 1410 IF(CRDOUT) THEN
         WRITE(IPLNT2,1026) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR2),K=1,8)
         WRITE(IPLNT2,1031) (PSID(J),EPSD(J),J=1,8),
     1        ((LIBRT(J,I),I=1,3),J=1,8)
      ELSE
         WRITE(IPLNT2) JD,FRACT,IVEL,(((PLANT1(I,K,J),
     1       I=1,IVEL),J=1,IPAR2),K=1,8),
     2        (PSID(J),EPSD(J),J= 1, 8),
     3        ((LIBRT(J,I),I=1,3),J= 1, 8),ZERO
      ENDIF
      GOTO 1420
 1415 IF(CRDOUT) THEN
         WRITE(IPLNT2,1036) JD,FRACT,IORD,JORD,NUMPRO,NUMPT2,
     1   ((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),I=1,3),
     2   J=1,JORD),LK=1,NUMPT2),HC1,HC2
      ELSE
         WRITE(IPLNT2) JD,FRACT,IORD,JORD,NUMPRO,NUMPT2,
     1 ((SPRB(I,J,1),I=1,3),J=1,IORD),(((SPRB(I,J,LK+1),I=1,3),
     2 J=1,JORD),LK=1,NUMPT2),HC1,HC2,ZERO
      ENDIF
 1420 IF(LIST.EQ.0) GOTO 1460
      LINET=LINET+1
      IF(LINET.LT.LIST) GOTO 1460
      LINET=0
      WRITE(IOUT,1430) JD,FRACT,(PLANT1(I,1,1),I=1,IVEL)
 1430 FORMAT(I9,F9.6,(T19,1P,6D19.12 ) )
C        SET UP VARIABLE FORMAT
      IF(IVEL.GE.1.AND.IVEL.LE.9) CALL EBCDIX(IVEL,FRMT,9,1)
      IF(LPRNT.GT.1) WRITE(IOUT,FRMT) LPRNT,(PLANT1(I,1,LPRNT),I=1,IVEL)
      IF(LSTPTL) WRITE(IOUT,FRMT) (J,(PLANT1(I,1,J),I=1,IVEL),J=2,IPAR1)
      IF(LIST.GT.0.OR.KM.LE.1) GOTO 1460
      DO 1450 K=2,KM
      WRITE(IOUT,1440) (PLANT1(I,K,1),I=1,IVEL)
 1440 FORMAT(T19,1P,6D19.12)
      IF(LPRNT.GT.1) WRITE(IOUT,FRMT) LPRNT,(PLANT1(I,K,LPRNT),I=1,IVEL)
      IF(LSTPTL) WRITE(IOUT,FRMT) (J,(PLANT1(I,K,J),I=1,IVEL),J=2,IPAR1)
 1450 CONTINUE
 1460 IF(.NOT.PLTICS) GOTO 1600
C
C*  START=1500
C           GET OSCULATING ORBITAL ELEMENTS
      IF(NPLT.GE.NPLTMX) GOTO 1600
      KPLT=KPLT-KM
      TPLT=(JD-JD0)+(FRACT-FRACT0)+(KPLT-1)*TABINT
 1500 IF(KPLT.GT.KM) GOTO 1600
      CALL CHNCNC(SQGM,PLANT1(1,KPLT,1),CNDX)
      IF(NPLT.GT.0.OR.ICND.EQ.0) GOTO 1520
      DO 1510 I=1,6
        CNDS(I)=CNDX(I)
 1510 END DO
 1520 IF(NPLT.EQ.0) CALL JNITL(SQGM,CNDS,ELPTC,1,DYLPT)
      IF(.NOT.PLTIC(6)) GOTO 1530
      CNDX(6)=MOD(CNDX(6)-MMOT*TPLT,360._10)
      IF(CNDX(6).LT.0D0) CNDX(6)=CNDX(6)+360D0
 1530 NPLT=NPLT+1
      TIMP(NPLT)=TPLT
      IF(NPLT.GT.1 .AND. ICND.EQ.0) THEN
         CNDWID=NPLT-MAX0(1,NPLT-5)
         DO I=3,6
            CNDAV=0D0
            CNDVR=0D0
            DO J=MAX0(1,NPLT-5),NPLT-1
               CNDAV=CNDAV+CNDP(J,I)
               CNDVR=CNDVR+CNDP(J,I)*CNDP(J,I)
            END DO
            CNDAV=CNDAV/CNDWID
            CNDVR=SQRT(MAX(CNDVR/CNDWID-CNDAV*CNDAV,1._10))
            CNDVR=MIN(5._10*CNDVR,80._10)
            CNDAV=CNDAV+CNDS(I)-CNDCYC(I)-CNDX(I)
            IF(ABS(CNDAV).GT.300._10-CNDVR)
     .       CNDCYC(I)=CNDCYC(I)+SIGN(360._10,CNDAV)
            CNDX(I)=CNDX(I)+CNDCYC(I)
         END DO
      ENDIF

      DO 1540 I=1,6
        CNDP(NPLT,I)=CNDX(I)-CNDS(I)
 1540 END DO

      IF(PLTCRT) THEN
         CALL JLIPT(TPLT,ELPTC,7,YLPT,RYLPT,DYLPT)
         DO I=7,9
            CNDP(NPLT,I)=PLANT1(I-6,KPLT,1)-YLPT(I-6)
         END DO
         DO I=10,15
            IF(PLTIC(I)) CNDP(NPLT,I)=PLANT1(1,KPLT,I-8)-DYLPT(1,I-9)
         END DO
      ENDIF
      KPLT=KPLT+PLTINT
      TPLT=TPLT+TABPLT
      IF(NPLT.LT.NPLTMX) GOTO 1500
C
C           SEE IF END OF RANGE
 1600 IF(IDIR*(JD-JD2).GE.0) GOTO 2020
      IF(IFILTR.LE.0) GOTO 1300
      NRCFIL=NRCFIL+1
      IF(IEND.LT.3) GOTO 1300
      IEND=0
C           READ NEXT FILTER HEADER/TRAILER AND START NEXT SPAN
      IF(CRDIN) THEN
         IF(EXTP.EQ.EXTPO) THEN
            READ(IPLNT1,116,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
         ELSE
            READ(IPLNT1,117,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
         ENDIF
      ELSE
         READ(IPLNT1,END=2000) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG
      ENDIF
      IF(TNEXT.GT.JD2) NLFLAG=1
      IF(IPLNT2.GT.0) THEN
         IF(CRDOUT) THEN
            WRITE(IPLNT2,116) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG,NRCFIL
         ELSE
            WRITE(IPLNT2) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG,NRCFIL,ZERO
         ENDIF
      ENDIF
      IF(LIST.NE.0) WRITE(IOUT,1210) TPREV,TTHIS,TNEXT,IEPOCH,NLFLAG,
     1 NRCFIL
      NRCFIL=0
      GOTO 1300
C
C*  START=2000
C        END OF FILE ON IPLNT1
 2000 CONTINUE
      WRITE(IOUT,2010) IPLNT1
 2010 FORMAT('0END OF FILE ON IPLNT1=',I5,10X,'BAD END?')
C
 2020 REWIND IPLNT1
      IF(STOP) GOTO 9000
      IF(IPLNT2.GT.0) REWIND IPLNT2
      WRITE(IOUT,2030) JD,FRACT
 2030 FORMAT('0LAST RECORD OUTPUT   JD,FRACT=', I10,F20.10)
      IF(NPERR.GT.0) WRITE(IOUT,2040) NPERR
 2040 FORMAT(I15,' RECORDS WITH WRONG NUMBER OF PARTIALS')
      IF(.NOT.PLTICS) GOTO 9000
      DO 2050 I=1,15
      IF(PLTIC(I)) CALL QPLOT(TIMP,CNDP(1,I),NPLT,1,'Date',-4,TAG(I),10,
     .    0)
 2050 CONTINUE
      CALL PLOT(0.,0.,999)
      WRITE(IOUT,2060) CNDS
 2060 FORMAT('0END OF PLOTTING: OSCULATING ELEMENTS RELATIVE TO'/
     1 1X,1P,6D22.15)
C
C*  START=9000
 9000 STOP
      END
